<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wubigo on wubigo</title>
    <link>https://wubigo.com/</link>
    <description>Recent content in wubigo on wubigo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Mar 2022 15:39:42 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>搭建Edgex设备服务开发环境</title>
      <link>https://wubigo.com/post/edgex-device-service-dev-env-setup/</link>
      <pubDate>Fri, 11 Mar 2022 15:39:42 +0800</pubDate>
      
      <guid>https://wubigo.com/post/edgex-device-service-dev-env-setup/</guid>
      <description>

&lt;p&gt;搭建EDGEX设备服务开发环境&lt;/p&gt;

&lt;h1 id=&#34;edgex简介&#34;&gt;EDGEX简介&lt;/h1&gt;

&lt;p&gt;EdgeX Foundry 项目成立于2017年，由Linux 基金会主持，目前已经拥有75个会员， 包括重量级的SAMSUNG，Dell，AMD，ANALOG DEVICES &amp;hellip; 但其中最重要的角色其实是戴尔。它为EdgeX Foundry提供该公司采用Apache 2.0许可证的FUSE源代码。FUSE包括10多种微服务和12500多万行代码，它们在连接标准、边缘分析、安全、系统管理和服务之间提供了互操作性。我发现在科普的过程中，会不断的引入新概念，然后就得嵌套解释新名词和概念。那FUSE 又是什么？FUSE 是Dell 为了拓展边缘计算物联网服务而发展出来的，基于Java SPRING CLOUD 的微服务框架软件。这套软件最大的特征是中立于任何硬件平台和操作系统，高度模块化，可自由扩展。Dell 从私有化完成的那天开始，我们见到它一系列的并购，其中并购VMware，EMC 等动作，都直接剑指云计算和物联网技术。FUSE 的发布，更昭示了Dell谋求转型的决心。物联网的繁荣非常地依赖于物联网生态企业，全球大型IT 公司谋求物联网布局，都会提供框架软件，再培养生态伙伴来形成落地应用。而在生态伙伴的培养过程中，开源的基础框架软件是非常容易被理解和吸收的。 这也是Dell 选择跟Linux 基金会合作，并捐赠和完善代码的重要原因：Dell 需要庞大的生态伙伴，而Linux 具有开源软件界强大的号召力和影响力。&lt;/p&gt;

&lt;p&gt;EdgeX Foundry原来是用Java写的，导致平台体积庞大，占用资源，后来Linux基金会用Go语言对其进行了重构.&lt;/p&gt;

&lt;p&gt;EdgeX Foundry是一系列松耦合、开源的微服务集合。该微服务集合构成了四个微服务层及两个增强的基础系统服务，这四个微服务层包含了从物理域数据采集到信息域数据处理等一系列的服务，另外两个基础系统服务为该四个服务层提供支撑服务。&lt;/p&gt;

&lt;p&gt;四个微服务层分别是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;设备服务负责采集数据及控制设备功能。&lt;/li&gt;
&lt;li&gt;核心服务负责本地存储分析和转发数据，以及控制命令下发。&lt;/li&gt;
&lt;li&gt;支持服务负责日志记录、任务调度、数据清理、规则引擎和告警通知。&lt;/li&gt;
&lt;li&gt;应用服务/导出服务负责上传数据到云端或第三方信息系统，以及接收控制命令转发给核心服务。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;两个增强基础系统服务：&lt;/p&gt;

&lt;p&gt;安全服务、管理服务这两个软件模块虽然不直接处理边缘计算的功能性业务，但是对于边缘计算的安全性和易用性来说很重要&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/post/edgex-svr.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;启动edgex核心服务&#34;&gt;启动EDGEX核心服务&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;wget https://raw.githubusercontent.com/edgexfoundry/edgex-compose/jakarta/docker-compose-no-secty.yml


 docker-compose -f docker-compose-no-secty.yml up -d
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;打开数据和控制服务调试开关&#34;&gt;打开数据和控制服务调试开关&lt;/h1&gt;

&lt;p&gt;在consul里面配置应用：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://localhost:8500/ui/dc1/kv/edgex/appservices/2.0/app-rules-engine/Writable/LogLevel/edit&#34; target=&#34;_blank&#34;&gt;http://localhost:8500/ui/dc1/kv/edgex/appservices/2.0/app-rules-engine/Writable/LogLevel/edit&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;修改INFO为DEBUG&lt;/p&gt;

&lt;h1 id=&#34;在ide里面启动设备服务&#34;&gt;在IDE里面启动设备服务&lt;/h1&gt;

&lt;p&gt;以IP摄像头设备服务为例&lt;/p&gt;

&lt;h2 id=&#34;打开webcam&#34;&gt;打开WEBCAM&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://wubigo.com/post/webcam-to-ip-camera/&#34; target=&#34;_blank&#34;&gt;webcam-to-ip-camera&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;配置开发环境&#34;&gt;配置开发环境&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;git clone git@github.com:edgexfoundry/device-camera-go.git
git checkout jakarta
cd device-camera-go

set EDGEX_SECURITY_SECRET_STORE=false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;调整IDE的当前工作目录为：device-camera-go\cmd
否则，设备服务启动会找不到设备配置文件。&lt;/p&gt;

&lt;p&gt;或者移动资源文件到IDE当前工作目录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mv -rf cmd/res  .
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;打开设备服务调试日志并启动设备服务&#34;&gt;打开设备服务调试日志并启动设备服务&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;res/configuration.toml
@@ -1,5 +1,5 @@
 [Writable]
-LogLevel = &amp;quot;INFO&amp;quot;
+LogLevel = &amp;quot;DEBUG&amp;quot;



level=INFO ts=2022-03-11T08:13:54.8106393Z app=device-camera source=devices.go:87 msg=&amp;quot;Device Camera001 not found in Metadata, adding it ...&amp;quot;        
level=INFO ts=2022-03-11T08:13:54.8133486Z app=device-camera source=autodiscovery.go:33 msg=&amp;quot;AutoDiscovery stopped: disabled by configuration&amp;quot;       
level=INFO ts=2022-03-11T08:13:54.813521Z app=device-camera source=autodiscovery.go:42 msg=&amp;quot;AutoDiscovery stopped: ProtocolDiscovery not implemented&amp;quot;
level=INFO ts=2022-03-11T08:13:54.8137182Z app=device-camera source=message.go:50 msg=&amp;quot;Service dependencies resolved...&amp;quot;
level=INFO ts=2022-03-11T08:13:54.8137182Z app=device-camera source=message.go:51 msg=&amp;quot;Starting device-camera to be replaced by makefile &amp;quot;
level=INFO ts=2022-03-11T08:13:54.8137182Z app=device-camera source=message.go:55 msg=&amp;quot;Camera device service started&amp;quot;
level=INFO ts=2022-03-11T08:13:54.8137182Z app=device-camera source=message.go:58 msg=&amp;quot;Service started in: 649.0037ms&amp;quot;

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;在edgex-device-rest日志查看启动的设备服务&#34;&gt;在edgex-device-rest日志查看启动的设备服务&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;docker logs -f edgex-device-rest
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;配置设备文件&#34;&gt;配置设备文件&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[[DeviceList]]
Name = &amp;quot;Camera001&amp;quot;
ProfileName = &amp;quot;camera-bosch&amp;quot;
Location = &amp;quot;edgex lab&amp;quot;
  [DeviceList.Protocols]
    [DeviceList.Protocols.HTTP]
    Address = &amp;quot;localhost:56000&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;设备数据采集和控制&#34;&gt;设备数据采集和控制&lt;/h2&gt;

&lt;h3 id=&#34;查看设备所有的资源&#34;&gt;查看设备所有的资源&lt;/h3&gt;

&lt;p&gt;通过EDGEX元数据服务查看设备资源&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -X GET http://localhost:59882/api/v2/device/name/Camera001
{
    &amp;quot;apiVersion&amp;quot;: &amp;quot;v2&amp;quot;,
    &amp;quot;statusCode&amp;quot;: 200,
    &amp;quot;deviceCoreCommand&amp;quot;: {
        &amp;quot;deviceName&amp;quot;: &amp;quot;Camera001&amp;quot;,
        &amp;quot;profileName&amp;quot;: &amp;quot;camera-bosch&amp;quot;,
        &amp;quot;coreCommands&amp;quot;: [
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifProfileInformation&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifProfileInformation&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifProfileInformation&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;TamperDetected&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/TamperDetected&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;TamperDetected&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;Bool&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;occupancy&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/occupancy&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;occupancy&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;Uint32&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifReboot&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifReboot&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifReboot&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;Bool&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;counter&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/counter&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;counter&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;Uint32&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifDeviceInformation&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifDeviceInformation&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifDeviceInformation&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifDateTime&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifDateTime&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifDateTime&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifDns&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifDns&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifDns&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifNetworkProtocols&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifNetworkProtocols&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifNetworkProtocols&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifNetworkDefaultGateway&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifNetworkDefaultGateway&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifNetworkDefaultGateway&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifNetworkInterfaces&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifNetworkInterfaces&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifNetworkInterfaces&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifNtp&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifNtp&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifNtp&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifUsers&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifUsers&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifUsers&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifSnapshot&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifSnapshot&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifSnapshot&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;Binary&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifUser&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifUser&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifUser&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifHostname&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifHostname&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifHostname&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;MotionDetected&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/MotionDetected&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;MotionDetected&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;Bool&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifStreamURI&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifStreamURI&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifStreamURI&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifHostnameFromDHCP&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifHostnameFromDHCP&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifHostnameFromDHCP&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;Bool&amp;quot;
                    }
                ]
            }
        ]
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;访问设备资源&#34;&gt;访问设备资源&lt;/h3&gt;

&lt;p&gt;设备的资源地址为上面接口返回的信息：url+path  (设备控制服务)&lt;/p&gt;

&lt;p&gt;例如: &lt;a href=&#34;http://edgex-core-command:59882/api/v2/device/name/Camera001/OnvifHostnameFromDHCP&#34; target=&#34;_blank&#34;&gt;OnvifHostnameFromDHCP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;设备控制服务会调用实际的设备服务的API:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker logs -f edgex-core-command 

edgex-core-command           | level=ERROR ts=2022-03-11T08:23:01.759949942Z app=core-command source=http.go:47 X-Correlation-ID=8a4c186d-6f40-464f-be03-b5e67c866d3b msg=&amp;quot;failed to send a http request -&amp;gt; Get \&amp;quot;http://localhost:59985/api/v2/device/name/Camera001/OnvifHostname\&amp;quot;: dial tcp 127.0.0.1:59985: connect: connection refused&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因为设备服务启动的时候，配置的ip为LOCALHOST, 容器内现在无法访问到设备服务实例API, 所以连接拒绝&lt;/p&gt;

&lt;p&gt;在设备服务所在网络浏览器直接上面的地址即可&lt;/p&gt;

&lt;h1 id=&#34;清理测试环境&#34;&gt;清理测试环境&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;docker-compose -f docker-compose-no-secty.yml down
docker volume rm $(docker volume ls -q)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>OpenAPI vs AsyncAPI</title>
      <link>https://wubigo.com/post/openapi-vs-asyncapi/</link>
      <pubDate>Sat, 26 Feb 2022 21:55:15 +0800</pubDate>
      
      <guid>https://wubigo.com/post/openapi-vs-asyncapi/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/post/multi-runtime.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/post/openap-vs-asyncapi-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/post/openap-vs-asyncapi-2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;[1] &lt;a href=&#34;https://www.asyncapi.com/docs/getting-started/coming-from-openapi&#34; target=&#34;_blank&#34;&gt;https://www.asyncapi.com/docs/getting-started/coming-from-openapi&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Redis消息队列和实时数据处理</title>
      <link>https://wubigo.com/post/redis-as-real-time-database/</link>
      <pubDate>Sat, 05 Feb 2022 11:40:58 +0800</pubDate>
      
      <guid>https://wubigo.com/post/redis-as-real-time-database/</guid>
      <description>

&lt;h1 id=&#34;redis&#34;&gt;REDIS&lt;/h1&gt;

&lt;p&gt;Redis (Remote Dictionary Server)是一个流行的开源内存
提供高级键值抽象的键值存储。
Redis 是单线程的，它只处理一个命令
客户端在进程的主线程中一次。 不同于传统的KV
键是简单数据类型（通常是字符串）的系统，键
在 Redis 中可以用作复杂的数据类型，例如哈希、列表、
集和排序集。 此外，Redis 支持复杂的原子
对这些数据类型的操作（例如，从
一个列表，将具有给定分数的新值插入排序集等）。
Redis 抽象和高摄取速度已被证明特别重要
对于许多延迟敏感的任务很有用。 因此，Redis
已获得广泛采用，并被越来越多的人使用
生产环境中的公司.&lt;/p&gt;

&lt;p&gt;Redis 支持高可用性和持久性。 高可用性
是通过将数据从主节点复制到
从节点并同步它们。 当一个主进程失败时，它的
对应的从属进程已准备好接管后续进程
称为故障转移。 持久性可以通过以下任一方式配置
以下两个选项：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;使用时间点快照文件
称为 RDB（Redis 数据库）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使用名为AOF（仅附加文件）。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;注意这三种机制（AOF重写、RDB 快照和复制）依赖 fork 获取
进程内存的时间点快照并将其序列化
（而主进程继续为客户端命令提供服务）&lt;/p&gt;

&lt;h1 id=&#34;项目简介&#34;&gt;项目简介&lt;/h1&gt;

&lt;p&gt;最近在做工业自动化(IIoT)项目，涉及到很多场景需要对一系列设备进行监控和信号处理。
该类场景对实时处理能力，系统稳定性，高可用性，容灾能力等等要求非常高。
其中几个核心的需求：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;设备数据不能丢失&lt;/li&gt;
&lt;li&gt;实时告警(毫秒级延迟)&lt;/li&gt;
&lt;li&gt;设备数据必须优先在边缘节点处理，边缘节点的物理服务器只有两台&lt;/li&gt;
&lt;li&gt;每个边缘节点接入的设备上行数据量大概6万点/秒，数据包小于1K&lt;/li&gt;
&lt;li&gt;中心需要汇聚和分析所有边缘节点的设备数据&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;技术现状&#34;&gt;技术现状&lt;/h1&gt;

&lt;h2 id=&#34;实时数据处理&#34;&gt;实时数据处理&lt;/h2&gt;

&lt;p&gt;实时数据处理是一个自 1990 年代以来一直在研究的问题 。
产生的数据量增加了，加上越来越复杂的软件解决方案
开发，需要满足这些需求出现了流式应用程序，例如
欺诈检测、网络监控和电子交易依赖于实时数据处理
确保所提供的服务被认为是正确和可靠的。
绝大多数现代应用程序使用某种数据库管理系统
处理数据。当应用程序收集或生成数据时，它会被存储和索引
它可以在以后由应用程序查询。但是，对于具有更严格
对实时数据处理的要求，这不是一个合适的方法。这是流的地方
处理开始发挥作用。流处理是在接收数据时直接处理数据。实时流
处理应用程序通常具有必须满足的某些关键要求。有低
输入和处理后的数据输出之间的延迟是实现实时的关键特征
应用。更传统的批处理方法需要以这样的方式收集数据
称为批次，其中处理只能在每个批次的最终数据块完成后开始
到达的。对于实时用例，这导致的延迟是不可接受的，因为这些实时的延迟
流应用程序最好在毫秒内。&lt;/p&gt;

&lt;h2 id=&#34;现有资源&#34;&gt;现有资源&lt;/h2&gt;

&lt;p&gt;公司现有的工控产品都是基于微服务架构实现的。用于满足超大型集团公司
工控自动化需求:DEV/OPS，PaaS，双活，AI/OPS等。需要上百个虚机来支
撑现有的工控平台。&lt;/p&gt;

&lt;h1 id=&#34;技术调研&#34;&gt;技术调研&lt;/h1&gt;

&lt;h2 id=&#34;更换消息中间件&#34;&gt;更换消息中间件&lt;/h2&gt;

&lt;p&gt;使用REDIS STREAM替换消息中间件。
在测试中，发现REDIS作为队列，使用比较方便：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;消息队列动态创建，目前以时间戳为标识方便处理(例如&amp;rdquo;STREAM:02041123&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;消息队列消费完后删除，释放内存( isDelived &amp;amp;&amp;amp; isSaved  -&amp;gt; redisson.getKeys().delete(&amp;ldquo;STREAM:02041123&amp;rdquo;))&lt;/li&gt;
&lt;li&gt;动态检查消息队列列表，如果没有消费，立即处理(redisson.getKeys())&lt;/li&gt;
&lt;li&gt;主节点配置为缓存，从节点配置为存储&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;经过测试，现在redis消息队列每小时能处理2千万条的设备数据。
还需要进一步优化写入速度。&lt;/p&gt;

&lt;h3 id=&#34;redis消息处理确认流程图&#34;&gt;REDIS消息处理确认流程图&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/redis-stream.svg&#34; alt=&#34;REDIS消息队列&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;更换分布式监控&#34;&gt;更换分布式监控&lt;/h2&gt;

&lt;h2 id=&#34;更换实时数据库&#34;&gt;更换实时数据库&lt;/h2&gt;

&lt;h1 id=&#34;redis数据可靠性&#34;&gt;REDIS数据可靠性&lt;/h1&gt;

&lt;h2 id=&#34;redis-on-flash&#34;&gt;REDIS ON FLASH&lt;/h2&gt;

&lt;p&gt;在许多情况下，SSD 的高性能也将延迟和吞吐量的性能瓶颈从设备 I/O 转移到了网络上。
对于应用程序而言，将其架构设计为将数据存储在本地 SSD 上而不是使用远程数据存储
服务变得更具吸引力。 这增加了对可嵌入应用程序的键值存储引擎的需求.&lt;/p&gt;

&lt;p&gt;RocksDB单节点的存储上限是100GB，超过100GB需要使用分区。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/redis-on-flash.svg&#34; alt=&#34;REDIS ON FLASH&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;redis-shard&#34;&gt;REDIS SHARD&lt;/h2&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;p&gt;[1] &lt;a href=&#34;https://www.doria.fi/bitstream/handle/10024/177865/tallberg_sebastian.pdf?sequence=2&amp;amp;isAllowed=y&#34; target=&#34;_blank&#34;&gt;A COMPARISON OF DATA INGESTION PLATFORMS IN REAL-TIME STREAMING&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[2] &lt;a href=&#34;https://www.alibabacloud.com/blog/interview-with-the-creator-of-redisson-building-an-open-source-enterprise-redis-client_593854&#34; target=&#34;_blank&#34;&gt;Interview with the Creator of Redisson&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[3] &lt;a href=&#34;https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying&#34; target=&#34;_blank&#34;&gt;What every software engineer should know about real-time data&amp;rsquo;s unifying abstraction&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[4] &lt;a href=&#34;http://www.kereno.com/rocksdb-rof.pdf&#34; target=&#34;_blank&#34;&gt;Optimization of RocksDB for Redis on Flash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[5] &lt;a href=&#34;https://github.com/RedisLabs/memtier_benchmark&#34; target=&#34;_blank&#34;&gt;Memtier benchmark&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[6] &lt;a href=&#34;https://tikv.org/docs/5.1/reference/architecture/overview/&#34; target=&#34;_blank&#34;&gt;Distributed key-value database&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[7] &lt;a href=&#34;https://dl.acm.org/doi/fullHtml/10.1145/3483840&#34; target=&#34;_blank&#34;&gt;Evolution of Development in a Key-value Store Serving Large-scale Applications&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[8] &lt;a href=&#34;https://cloud.google.com/compute/docs/disks/performance&#34; target=&#34;_blank&#34;&gt;Block storage performance&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[9] &lt;a href=&#34;https://www.cockroachlabs.com/blog/cockroachdb-on-rocksd/&#34; target=&#34;_blank&#34;&gt;built CockroachDB on top of RocksDB&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[10] &lt;a href=&#34;https://www.usenix.org/system/files/conference/fast16/fast16-papers-lu.pdf&#34; target=&#34;_blank&#34;&gt;Separating Keys from Values in SSD-conscious Storage&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[11] &lt;a href=&#34;https://wubigo.com/talk/&#34; target=&#34;_blank&#34;&gt;Atlas: Baidu’s Key-value Storage System for Cloud Data&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[12] &lt;a href=&#34;https://www.slideshare.net/Hadoop_Summit/scaling-hdfs-to-manage-billions&#34; target=&#34;_blank&#34;&gt;Scaling HDFS to Manage Billions of Files with Key Value Stores(Hadoop Summit 2015)&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>虎年新春快乐</title>
      <link>https://wubigo.com/post/happy-lunar-new-year-of-tiger/</link>
      <pubDate>Tue, 01 Feb 2022 09:37:46 +0800</pubDate>
      
      <guid>https://wubigo.com/post/happy-lunar-new-year-of-tiger/</guid>
      <description>&lt;p&gt;虎年新春快乐&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Maybe this year, we ought to walk through the rooms of our lives not
looking for flaws, but looking for potential—Ellen Goodman&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>2021 Notes</title>
      <link>https://wubigo.com/post/notes-2021/</link>
      <pubDate>Sat, 01 Jan 2022 16:59:00 +0800</pubDate>
      
      <guid>https://wubigo.com/post/notes-2021/</guid>
      <description>

&lt;h2 id=&#34;社会价值&#34;&gt;社会价值&lt;/h2&gt;

&lt;p&gt;个人的价值在于为别人和社会解决问题和提供帮助，在帮助别人的过程
中促进个人成长。读书不是目的，读书只是为大脑提供了输入，产生对
社会有用的输出才是读书的真正目的&lt;/p&gt;

&lt;h2 id=&#34;思考&#34;&gt;思考&lt;/h2&gt;

&lt;p&gt;思考比行动重要。害怕思考，草率行动是懒惰的表现。思考就是抑制动物的
本性过程，思考是个人成长的最快途径&lt;/p&gt;

&lt;h2 id=&#34;沟通&#34;&gt;沟通&lt;/h2&gt;

&lt;p&gt;理解对方是沟通的前提条件。沟通就是让对方认识到自己提议的价值，
让对方受益。无论沟通的对象是朋友，家人，同事，不要首先想着
如何改变别人，重要的调整自己。&lt;/p&gt;

&lt;h2 id=&#34;业务和技术&#34;&gt;业务和技术&lt;/h2&gt;

&lt;p&gt;软件解决方案的出发点是解决客户问题。解决问题与技术的先进性与否无关，
很多情况下解决方案取决于公司的组织形式和资源条件。运维成本是大型
软件解决方案最主要的成本。监控的目的在于预防失败。
越早发现问题，解决成本越低。&lt;/p&gt;

&lt;h2 id=&#34;知识积累&#34;&gt;知识积累&lt;/h2&gt;

&lt;p&gt;价值与风险是统一的，看待机会既要看到可能的价值，同时认识到风险。
巨大的价值必然伴随着巨大的风险。偶然发现的所谓的价值机会可能只是
一个无知陷阱。知识和财富不仅在于积累更在于传承。财富最重要的是
在于保值。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mainflux Dev Setup</title>
      <link>https://wubigo.com/post/mainflux-dev-setup/</link>
      <pubDate>Mon, 20 Dec 2021 17:04:37 +0800</pubDate>
      
      <guid>https://wubigo.com/post/mainflux-dev-setup/</guid>
      <description>

&lt;h1 id=&#34;build&#34;&gt;BUILD&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p $GOPATH/src/github.com/mailflux
git clone https://github.com/wubigo/mainflux.git
cd github.com/mailflux/mailflux/
make
make dockers_dev
make run
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;provision-the-system&#34;&gt;Provision the System&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;mainflux-cli provision test
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;get-token&#34;&gt;GET TOKEN&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;curl -k https://172.21.53.253/tokens

{
  &amp;quot;email&amp;quot;: &amp;quot;bold_gould@email.com&amp;quot;,
  &amp;quot;password&amp;quot;: &amp;quot;12345678&amp;quot;
}

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Connect KEPServer to Ali IoT</title>
      <link>https://wubigo.com/post/connect-kepserver-to-ali-iot/</link>
      <pubDate>Thu, 16 Dec 2021 13:40:38 +0800</pubDate>
      
      <guid>https://wubigo.com/post/connect-kepserver-to-ali-iot/</guid>
      <description>

&lt;p&gt;Configure an MQTT Client Agent within the IoT Gateway Plug-In for KEPServerEX&lt;/p&gt;

&lt;p&gt;to send data to Ali IoT. The connection can be made using MQTT over Transmission&lt;/p&gt;

&lt;p&gt;Control Protocol (TCP) and MQTT over Transport Layer Security (TLS).&lt;/p&gt;

&lt;p&gt;set up Kepware KEPServerEX IoT Gateway on Windows to connect with the MQTT bridge&lt;/p&gt;

&lt;p&gt;of IoT Core to push streaming data to Cloud and send control messages from IoT&lt;/p&gt;

&lt;p&gt;Core back to KEPServerEX&lt;/p&gt;

&lt;p&gt;IoT Gateway is a module that provides integration with external IT systems&lt;/p&gt;

&lt;p&gt;and cloud platforms through a series of protocols such as MQTT and HTTP.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/post/kepserverex-iot.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A random value simulator sends values to IoT Gateway.&lt;/li&gt;
&lt;li&gt;Values go through the IoT Gateway to IoT Core.&lt;/li&gt;
&lt;li&gt;IoT Core bridges the values to Pub/Sub.&lt;/li&gt;
&lt;li&gt;Users send command messages through IoT Core.&lt;/li&gt;
&lt;li&gt;Command messages go through IoT Core to the IoT Gateway.&lt;/li&gt;
&lt;li&gt;IoT Gateway delivers the messages to the simulated device.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;setup&#34;&gt;setup&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Install Kepware KEPServerEX.&lt;/li&gt;
&lt;li&gt;Install PowerShell.&lt;/li&gt;
&lt;li&gt;Create or select a Cloud project.&lt;/li&gt;
&lt;li&gt;Enable Kepware KEPServerEX Configuration API Service.&lt;/li&gt;
&lt;li&gt;Install the Cloud SDK.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;detail&#34;&gt;detail&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Generate a self-signed certificate authority (CA) certificate.&lt;/li&gt;
&lt;li&gt;Provision an IoT Core device on Google Cloud.&lt;/li&gt;
&lt;li&gt;Configure Kepware KEPServerEX IoT Gateway as an IoT Core device.&lt;/li&gt;
&lt;li&gt;Set up a Windows scheduled task to refresh the JSON Web Token (JWT).&lt;/li&gt;
&lt;li&gt;Set up the Kepware KEPServerEX IoT Gateway to send simulated metrics to IoT Core, and verify on Pub/Sub.&lt;/li&gt;
&lt;li&gt;Set up the Kepware KEPServerEX IoT Gateway to receive command messages and send commands from IoT Core.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;data-collect&#34;&gt;data collect&lt;/h1&gt;

&lt;p&gt;Read data from onsite equipment using industrial protocols such as OPC-UA, Modbus and  EtherNet/IP&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Data Lake vs Warehouse</title>
      <link>https://wubigo.com/post/data-lake-vs-warehouse/</link>
      <pubDate>Tue, 07 Dec 2021 15:58:21 +0800</pubDate>
      
      <guid>https://wubigo.com/post/data-lake-vs-warehouse/</guid>
      <description>&lt;p&gt;Data catalogs solve the problem by tagging fields and data sets with consistent business
terms and providing a shopping-type interface that allows the users to find data
sets by describing what they are looking for using the business terms that they are
used to, and to understand the data in those data sets through tags and descriptions
that use business terms.&lt;/p&gt;

&lt;p&gt;Data lakes are the do-it-yourself version of a data warehouse, allowing data engineering teams to pick and choose the various metadata, storage, and compute technologies they want to use depending on the needs of their systems.
Data lakes are ideal for data teams looking to build a more customized platform, often supported by a handful (or more) of data engineers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/data-lake-stack.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://towardsdatascience.com/how-to-build-your-data-platform-choosing-a-cloud-data-warehouse&#34; target=&#34;_blank&#34;&gt;https://towardsdatascience.com/how-to-build-your-data-platform-choosing-a-cloud-data-warehouse&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.alibabacloud.com/blog/alibaba-cloud-maxcompute-vs--aws-redshift-azure-sql-data-warehouse&#34; target=&#34;_blank&#34;&gt;https://www.alibabacloud.com/blog/alibaba-cloud-maxcompute-vs--aws-redshift-azure-sql-data-warehouse&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Azure Config</title>
      <link>https://wubigo.com/post/azure-config/</link>
      <pubDate>Sun, 07 Nov 2021 20:00:24 +0800</pubDate>
      
      <guid>https://wubigo.com/post/azure-config/</guid>
      <description>

&lt;h1 id=&#34;配置&#34;&gt;配置&lt;/h1&gt;

&lt;p&gt;&amp;rsquo;.azure/config`&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[defaults]
location = westus

[cloud]
name = AzureCloud

[core]
output = table
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;az config set defaults.location=westus2 defaults.group=MyResourceGroup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;az v2不支持config，直接修改配置文件&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Azure Function From Cmd</title>
      <link>https://wubigo.com/post/azure-function-from-cmd/</link>
      <pubDate>Sun, 07 Nov 2021 10:50:49 +0800</pubDate>
      
      <guid>https://wubigo.com/post/azure-function-from-cmd/</guid>
      <description>

&lt;h1 id=&#34;azure-region&#34;&gt;AZURE REGION&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;az account list-locations --query &amp;quot;sort_by([].{DisplayName:displayName, Name:name}, &amp;amp;DisplayName)&amp;quot; --output table
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;创建函数app&#34;&gt;创建函数APP&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

# Function app and storage account names must be unique.
storageName=mystorageaccount$RANDOM
functionAppName=myserverlessfunc$RANDOM
region=westeurope

# Create a resource group.
az group create --name myResourceGroup --location $region

# Create an Azure storage account in the resource group.
az storage account create \
  --name $storageName \
  --location $region \
  --resource-group myResourceGroup \
  --sku Standard_LRS

# Create a serverless function app in the resource group.
az functionapp create \
  --name $functionAppName \
  --storage-account $storageName \
  --consumption-plan-location $region \
  --resource-group myResourceGroup \
  --functions-version 2

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Lambda in Azure With Azure Functions Core Tools</title>
      <link>https://wubigo.com/post/lambda-in-azure-with-azure-functions-core-tools/</link>
      <pubDate>Sat, 06 Nov 2021 23:07:10 +0800</pubDate>
      
      <guid>https://wubigo.com/post/lambda-in-azure-with-azure-functions-core-tools/</guid>
      <description>

&lt;h1 id=&#34;安装func&#34;&gt;安装FUNC&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;npm i -D azure-functions-core-tools@3

export PATH=./

export CLI_DEBUG=1

func host start --verbose

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;安装playwright-chromium&#34;&gt;安装playwright-chromium&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;export PLAYWRIGHT_BROWSERS_PATH=0
npm install playwright-chromium@1.3.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;确认chrome的存放路径&lt;/p&gt;

&lt;p&gt;&lt;code&gt;node_modules/playwright-chromium/.local-browsers/chromium-792639&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;创建函数&#34;&gt;创建函数&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;/home/ubuntu/sls/azure-sls/node_modules/.bin/func  init
func new
func start
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;本地测试&#34;&gt;本地测试&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;export CLI_DEBUG=1
func host start --verbose
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;host.json&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;version&amp;quot;: &amp;quot;2.0&amp;quot;,
  &amp;quot;logging&amp;quot;: {
    &amp;quot;applicationInsights&amp;quot;: {
      &amp;quot;samplingSettings&amp;quot;: {
        &amp;quot;isEnabled&amp;quot;: true,
        &amp;quot;excludedTypes&amp;quot;: &amp;quot;Request&amp;quot;
      }
    }
  },
  &amp;quot;extensionBundle&amp;quot;: {
    &amp;quot;id&amp;quot;: &amp;quot;Microsoft.Azure.Functions.ExtensionBundle&amp;quot;,
    &amp;quot;version&amp;quot;: &amp;quot;[2.*, 3.0.0)&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果遇到如下问题&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Value cannot be null. (Parameter &amp;lsquo;provider&amp;rsquo;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;注释/禁用 extensionBundle&lt;/p&gt;

&lt;h1 id=&#34;发布&#34;&gt;发布&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;func azure functionapp publish my_function_app_name  --build remote
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;总结&#34;&gt;总结&lt;/h1&gt;

&lt;p&gt;部署节点和运行环境在同一可用区加快部署速度&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lambda in Azure with sls</title>
      <link>https://wubigo.com/post/lambda-in-azure-with-sls/</link>
      <pubDate>Sat, 06 Nov 2021 11:59:57 +0800</pubDate>
      
      <guid>https://wubigo.com/post/lambda-in-azure-with-sls/</guid>
      <description>

&lt;h1 id=&#34;创建函数&#34;&gt;创建函数&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;npm install -g serverless@2.65.0
sls -v

Framework Core: 2.65.0
Plugin: 5.5.1
SDK: 4.3.0
Components: 3.17.2

sls create -t azure-nodejs -p azure-fn
cd azure-fn
npm install

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;npm list |grep serverless-azure-functions
└─┬ serverless-azure-functions@2.1.3
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;部署函数&#34;&gt;部署函数&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;set AZURE_SUBSCRIPTION_ID=02a23ad5-
set AZURE_TENANT_ID=e9950462
set AZURE_CLIENT_ID=39258bc8
set AZURE_CLIENT_SECRET=hYdvD0
sls deploy --dryrun
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;测试&#34;&gt;测试&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;sls invoke -f hello -d &#39;{&amp;quot;name&amp;quot;: &amp;quot;Azure&amp;quot;}&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;清理&#34;&gt;清理&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;empty.json&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
&amp;quot;$schema&amp;quot;: &amp;quot;https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#&amp;quot;,
&amp;quot;contentVersion&amp;quot;: &amp;quot;1.0.0.0&amp;quot;,
&amp;quot;parameters&amp;quot;: { },
&amp;quot;variables&amp;quot;: { },
&amp;quot;resources&amp;quot;: [ ],
&amp;quot;outputs&amp;quot;: { }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;
az group deployment create --mode complete --template-file ./empty.json --resource-group testgroup
az group delete -n testgroup -y
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Quasar App Flow</title>
      <link>https://wubigo.com/post/quasar-app-flow/</link>
      <pubDate>Thu, 28 Oct 2021 15:53:54 +0800</pubDate>
      
      <guid>https://wubigo.com/post/quasar-app-flow/</guid>
      <description>

&lt;h1 id=&#34;cquasar-app-flow&#34;&gt;CQuasar App Flow&lt;/h1&gt;

&lt;p&gt;In order to better understand how a boot file works and what it does, you need to understand how your website/app boots:&lt;/p&gt;

&lt;p&gt;Quasar is initialized (components, directives, plugins, Quasar i18n, Quasar icon sets)
Quasar Extras get imported (Roboto font – if used, icons, animations, …)
Quasar CSS &amp;amp; your app’s global CSS are imported
App.vue is loaded (not yet being used)
Store is imported (if using Vuex Store in src/store)
Router is imported (in src/router)
Boot files are imported
Router default export function executed
Boot files get their default export function executed
(if on Electron mode) Electron is imported and injected into Vue prototype
(if on Cordova mode) Listening for “deviceready” event and only then continuing with following steps
Instantiating Vue with root component and attaching to DOM&lt;/p&gt;

&lt;h1 id=&#34;vue组件脚手架&#34;&gt;Vue组件脚手架&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;quasar new --list
quasar new [type] &amp;lt;name of your component with optional subfolder&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建组件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;quasar new component com1
quasar new page page1

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;组件类型&#34;&gt;组件类型&lt;/h2&gt;

&lt;p&gt;layout, page, component , boot, store&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lambda Redeploy Across Region</title>
      <link>https://wubigo.com/post/lambda-redeploy-across-region/</link>
      <pubDate>Fri, 22 Oct 2021 11:59:36 +0800</pubDate>
      
      <guid>https://wubigo.com/post/lambda-redeploy-across-region/</guid>
      <description>

&lt;h1 id=&#34;计算时间-vs-请求数量&#34;&gt;计算时间 vs 请求数量&lt;/h1&gt;

&lt;h2 id=&#34;平均计算时长&#34;&gt;平均计算时长&lt;/h2&gt;

&lt;p&gt;427586 / 27386 = 15.6 (秒)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/aws-lambda-fee.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;设置默认配置&#34;&gt;设置默认配置&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aws configure list-profiles

default
us-east-1
us-east-2
us-west-2
us-west-1
eu
eu-west-1
af-south-1
ap-east-1
ap-south-1
ap-northeast-3
ap-northeast-2
ap-southeast-1
ap-southeast-2
ca-central-1
eu-west-2
eu-south-1
eu-west-3
eu-north-1
me-south-1
sa-east-1

export AWS_PROFILE=us
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;下载部署包&#34;&gt;下载部署包&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aws lambda get-function --function-name webdriver


&amp;quot;Code&amp;quot;: {
        &amp;quot;RepositoryType&amp;quot;: &amp;quot;S3&amp;quot;,
        &amp;quot;Location&amp;quot;: &amp;quot;https://awslambda-ap-ne-1-tasks.s3.ap-northeast-1.amazonaws.com/snapshots/webdriver-aeb2eb63-9baf-4d06-9d3a-79459b172200?versionId=a71tk2dwwmvW1lPNB5VHKq8SbGS3laqE&amp;amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHIaDmFwLW5vcnRoZWFzdC0xIkcwRQIhAMRkIxPh1Fkd2nlCzgiDbsrmnCZEVunHibw2Cm6cyRIUAiB5t60IO6iESPDeUsTuQEjGyLfI73QyMK1mJY9Al70yECqNBAj8%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDkxOTk4MDkyNTEzOSIMjVD0S8e1HGmJujr6KuEDO8SCL9OcolFOwL4IKMbE3euJLEtiGjSxH6c8jRPbnjp07Zf%2BxrOfJmWT2MORQs0RAQSLJV5nOFfRWTIPI4dSNhI3Q628XqklZ8%2BF1UktvA5vRdEU3LhDvOSsDCmL19k&amp;amp;X-Amz-Signature=7f876918ec5283db390a3037512e7ad62e434330ec3e406db18b25f25f3da0fe&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从Location下载部署包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PROF = &amp;quot;eu-central-1&amp;quot;

aws lambda create-function --function-name webdriver --runtime nodejs12.x --zip-file fileb:///home/ubuntu/webdriver.zip --handler index.handler  --role arn:aws:iam::762491489154:role/service-role/webdriver-role-3hxi35t5   --timeout 63 --memory-size 1024 --layers arn:aws:lambda:us-east-1:764866452798:layer:chrome-aws-lambda:25  --profile us
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;配置&#34;&gt;配置&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;role-policy.json&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;Version&amp;quot;: &amp;quot;2012-10-17&amp;quot;,
    &amp;quot;Statement&amp;quot;: [
    {
        &amp;quot;Effect&amp;quot;: &amp;quot;Allow&amp;quot;,
        &amp;quot;Principal&amp;quot;: {
            &amp;quot;Service&amp;quot;: [&amp;quot;lambda.amazonaws.com&amp;quot;]
    },
    &amp;quot;Action&amp;quot;: &amp;quot;sts:AssumeRole&amp;quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;aws iam create-role --role-name lambda-s3 --assume-role-policy-document file://role-policy.json
aws iam attach-role-policy --role-name lambda-s3 --policy-arn arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;测试&#34;&gt;测试&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;export AWS_PROFILE=eu-south-1
aws lambda invoke --function-name webdriver --cli-binary-format raw-in-base64-out --payload &#39;{&amp;quot;pageNo&amp;quot;: 5}&#39; out --log-type Tail --query &#39;LogResult&#39; --output text |  base64 -d
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;调度&#34;&gt;调度&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aws events put-rule --name webdriver-scheduled-rule --schedule-expression &#39;rate(30 minutes)&#39; 


aws lambda add-permission --function-name webdriver --statement-id webdriver-scheduled-event --action &#39;lambda:InvokeFunction&#39; --principal events.amazonaws.com --source-arn arn:aws:events:eu-central-1:762491489154:rule/webdriver-scheduled-rule


aws events put-targets --rule webdriver-scheduled-rule --targets file://targets.json
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;调整周期&#34;&gt;调整周期&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;aws events put-rule --name webdriver-scheduled-rule --schedule-expression &amp;quot;rate(10 minutes)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/wubigo/API/blob/master/bash/put-rule.sh&#34; target=&#34;_blank&#34;&gt;https://github.com/wubigo/API/blob/master/bash/put-rule.sh&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;自动&#34;&gt;自动&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;if [ -z &amp;quot;$1&amp;quot; ]
  then
    echo &amp;quot;No region supplied&amp;quot;
    exit 1
fi
export AWS_PROFILE=$1

FN=$(aws lambda create-function --function-name webdriver --runtime nodejs12.x --zip-file fileb:///home/ubuntu/webdriver.zip --handler index.handler  --role arn:aws:iam::762491:role/lambda-s3   --timeout 63 --memory-size 1024 --layers arn:aws:lambda:${AWS_PROFILE}:762491:layer:chrome-aws-lambda:25)
echo $FN

aws events put-rule --name webdriver-scheduled-rule --schedule-expression &#39;rate(30 minutes)&#39;


EVENT=$(aws lambda add-permission --function-name webdriver --statement-id webdriver-scheduled-event --action &#39;lambda:InvokeFunction&#39; --principal events.amazonaws.com --source-arn arn:aws:events:${AWS_PROFILE}:762491:rule/webdriver-scheduled-rule)
echo $EVENT

T=$(python3 targets.py ${AWS_PROFILE})
cat targets.json
aws events put-targets --rule webdriver-scheduled-rule --targets file://targets.json
sleep 5
awslogs streams /aws/lambda/webdriver
awslogs get /aws/lambda/webdriver --filter-pattern=&amp;quot;[r=REPORT,...]&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;禁止调用&#34;&gt;禁止调用&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt; aws lambda put-function-concurrency --function-name webdriver --reserved-concurrent-executions 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;function cannot be invoked while the reserved concurrency is zero.&lt;/p&gt;

&lt;p&gt;Calling the invoke API action failed with this message: Rate Exceeded.&lt;/p&gt;

&lt;h1 id=&#34;并发配额重置&#34;&gt;并发配额重置&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aws lambda delete-function-concurrency  --function-name webdriver
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;清理&#34;&gt;清理&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aws lambda remove-permission --function-name webdriver --statement-id webdriver-scheduled-event
aws events list-targets-by-rule --rule webdriver-scheduled-rule
aws events remove-targets --rule  webdriver-scheduled-rule --ids 1
aws events delete-rule --name &amp;quot;webdriver-scheduled-rule&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Web Test Automation in Lambda Way</title>
      <link>https://wubigo.com/post/web-test-automation-in-lambda-way/</link>
      <pubDate>Sat, 09 Oct 2021 10:15:58 +0800</pubDate>
      
      <guid>https://wubigo.com/post/web-test-automation-in-lambda-way/</guid>
      <description>

&lt;h1 id=&#34;调整默认配置-设置内存和超时时间&#34;&gt;调整默认配置（设置内存和超时时间）&lt;/h1&gt;

&lt;p&gt;函数计算的模式内存是128 MB， 超时是3秒。  默认配置&lt;/p&gt;

&lt;p&gt;pyppeteer无法正常工作。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aws lambda get-function --function-name webdriver
{
    &amp;quot;Configuration&amp;quot;: {
        &amp;quot;FunctionName&amp;quot;: &amp;quot;webdriver&amp;quot;,
        &amp;quot;FunctionArn&amp;quot;: &amp;quot;arn:aws:lambda:ap-northeast-1:762491489154:function:webdriver&amp;quot;,
        &amp;quot;Runtime&amp;quot;: &amp;quot;nodejs12.x&amp;quot;,
        &amp;quot;Role&amp;quot;: &amp;quot;arn:aws:iam::762491489154:role/service-role/webdriver-role-3hxi35t5&amp;quot;,
        &amp;quot;Handler&amp;quot;: &amp;quot;index.handler&amp;quot;,
        &amp;quot;CodeSize&amp;quot;: 598,
        &amp;quot;Description&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;Timeout&amp;quot;: 63,
        &amp;quot;MemorySize&amp;quot;: 1024,
        &amp;quot;LastModified&amp;quot;: &amp;quot;2021-10-08T09:44:02.000+0000&amp;quot;,
        &amp;quot;CodeSha256&amp;quot;: &amp;quot;Ma8ntxB5UxdLSOdotZBnSGDuBUDI+XEGlggfpPlV/AI=&amp;quot;,
        &amp;quot;Version&amp;quot;: &amp;quot;$LATEST&amp;quot;,
        &amp;quot;TracingConfig&amp;quot;: {
            &amp;quot;Mode&amp;quot;: &amp;quot;PassThrough&amp;quot;
        },
        &amp;quot;RevisionId&amp;quot;: &amp;quot;3c08812d-e958-4427-a47e-be628966be36&amp;quot;,
        &amp;quot;Layers&amp;quot;: [
            {
                &amp;quot;Arn&amp;quot;: &amp;quot;arn:aws:lambda:ap-northeast-1:764866452798:layer:chrome-aws-lambda:25&amp;quot;,
                &amp;quot;CodeSize&amp;quot;: 51779390
            }
        ],

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;使用lambda-layer&#34;&gt;使用lambda  layer&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/shelfio/chrome-aws-lambda-layer&#34; target=&#34;_blank&#34;&gt;https://github.com/shelfio/chrome-aws-lambda-layer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;注意要使用相应分区&lt;/p&gt;

&lt;h1 id=&#34;函数定义&#34;&gt;函数定义&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;const chromium = require(&#39;chrome-aws-lambda&#39;);


function getRandomInt(max) {
  let r = Math.floor(Math.random() * max)
  if ( r &amp;lt;= 1 )
    r = 2
  return r;
}


exports.handler = async (event, context, callback) =&amp;gt; {
  console.log(&amp;quot;fn EVENT: \n&amp;quot; + JSON.stringify(event, null, 2))
  let e = JSON.parse(JSON.stringify(event, null, 2));
  let pageNo = e[&amp;quot;pageNo&amp;quot;]
  if ( pageNo == null )
    pageNo = getRandomInt(17)
  console.log(&amp;quot;pageNo=&amp;quot;+pageNo);
  let result = null;
  let browser = null;

  try {
    
    let path = await chromium.executablePath;
    console.log(&amp;quot;browser begin: &amp;quot;+ path+&amp;quot;\n&amp;quot; );
    browser = await chromium.puppeteer.launch({
      args: chromium.args,
      defaultViewport: chromium.defaultViewport,
      executablePath: await chromium.executablePath,
      headless: chromium.headless,
      ignoreHTTPSErrors: true,
    });
    
    let page = await browser.newPage();
    await page.setDefaultTimeout(0);

    await page.goto(&#39;https://wubigo.com/post/page/&#39;+pageNo);
    console.log(&amp;quot;go to wubigo&amp;quot;);
    result = await page.title();
    console.log(&amp;quot;title: &amp;quot; +result +&amp;quot;\n&amp;quot; );
    

    const page2 = await browser.newPage();
    await page2.setDefaultNavigationTimeout(0);
    const articles = await page.$$(&#39;h3.article-title&#39;);
    for (let i = 0; i &amp;lt; articles.length; i++) {
      const link = await articles[i].$eval(&#39;a&#39;, a =&amp;gt; a.getAttribute(&#39;href&#39;))
        .catch((e) =&amp;gt; console.log(&#39;catch err: &#39; + e));
      console.log(&#39;link=&#39;+link);
      e[&amp;quot;link&amp;quot;+i]=link;
      // await articles[i].click().catch((e) =&amp;gt; console.log(&#39;err: &#39; + e));
      await page2.goto(&#39;https://wubigo.com/&#39;+link);
      // await page.goBack();
      
    }
  } catch (error) {
    return callback(error);
  } finally {
    if (browser !== null) {
      await browser.close();
    }
  }
  result = JSON.stringify(e)
  return callback(null, result);
};

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;配置&#34;&gt;配置&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;policy.json&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;Version&amp;quot;: &amp;quot;2012-10-17&amp;quot;,
    &amp;quot;Statement&amp;quot;: [
    {
        &amp;quot;Effect&amp;quot;: &amp;quot;Allow&amp;quot;,
        &amp;quot;Principal&amp;quot;: {
            &amp;quot;Service&amp;quot;: [&amp;quot;lambda.amazonaws.com&amp;quot;, &amp;quot;s3.amazonaws.com&amp;quot;]
    },
    &amp;quot;Action&amp;quot;: &amp;quot;sts:AssumeRole&amp;quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;aws iam create-role --role-name lambda-s3 --assume-role-policy-document file://policy.json
aws iam attach-role-policy --role-name lambda-s3 --policy-arn arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
aws iam attach-role-policy --role-name lambda-s3 --policy-arn arn:aws:iam::aws:policy/AmazonS3FullAccess
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;复制&#34;&gt;复制&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aws lambda create-function --function-name webdriver --runtime nodejs12.x --zip-file fileb:///home/ubuntu/webdriver.zip --handler index.handler  --role arn:aws:iam::762491489154:role/service-role/webdriver-role-3hxi35t5   --timeout 63 --memory-size 1024 --layers arn:aws:lambda:us-east-1:764866452798:layer:chrome-aws-lambda:25  --profile us
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;执行&#34;&gt;执行&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aws lambda invoke --function-name webdriver --cli-binary-format raw-in-base64-out --payload &#39;{&amp;quot;pageNo&amp;quot;: 5}&#39; response.json --profile us




aws lambda invoke --function-name webdriver --cli-binary-format raw-in-base64-out --payload &#39;{&amp;quot;pageNo&amp;quot;: 5}&#39; out --log-type Tail --query &#39;LogResult&#39; --output text --profile us |  base64 -d

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;检查结果&#34;&gt;检查结果&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;cat response.json
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;eventbridge调度&#34;&gt;EventBridge调度&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aws events put-rule --name webdriver-scheduled-rule --schedule-expression &#39;rate(30 minutes)&#39;


aws lambda add-permission --function-name webdriver --statement-id webdriver-scheduled-event --action &#39;lambda:InvokeFunction&#39; --principal events.amazonaws.com --source-arn arn:aws:events:ap-northeast-1:762491489154:rule/webdriver-scheduled-rule


aws events put-targets --rule webdriver-scheduled-rule --targets file://targets.json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;targets.json&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[
    {
        &amp;quot;Id&amp;quot;: &amp;quot;1&amp;quot;,
        &amp;quot;Arn&amp;quot;: &amp;quot;arn:aws:lambda:ap-northeast-1:762491489154:function:webdriver&amp;quot;
    }
]

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;检查调度结果&#34;&gt;检查调度结果&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;2021-10-21T09:55:56.099Z	397385df-555a-451a-9ba6-b9548438c797	INFO	fn EVENT: 
{
    &amp;quot;version&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;id&amp;quot;: &amp;quot;8945024c-4594-df8a-74f3-9c98b0e75ed5&amp;quot;,
    &amp;quot;detail-type&amp;quot;: &amp;quot;Scheduled Event&amp;quot;,
    &amp;quot;source&amp;quot;: &amp;quot;aws.events&amp;quot;,
    &amp;quot;account&amp;quot;: &amp;quot;762491489154&amp;quot;,
    &amp;quot;time&amp;quot;: &amp;quot;2021-10-21T09:55:11Z&amp;quot;,
    &amp;quot;region&amp;quot;: &amp;quot;ap-northeast-1&amp;quot;,
    &amp;quot;resources&amp;quot;: [
        &amp;quot;arn:aws:events:ap-northeast-1:762491489154:rule/webdriver-scheduled-rule&amp;quot;
    ],
    &amp;quot;detail&amp;quot;: {}
}


# 检查日志

`log-events.json`
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;{
 &amp;ldquo;logStreamName&amp;rdquo;: &amp;ldquo;2021/10/21/[$LATEST]eae72f7f77124ab69d0a1fc398172cec&amp;rdquo;,
 &amp;ldquo;logGroupName&amp;rdquo;: &amp;ldquo;/aws/lambda/webdriver&amp;rdquo;,
 &amp;ldquo;startFromHead&amp;rdquo;: true
}&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;aws logs describe-log-streams &amp;ndash;log-group-name /aws/lambda/webdriver &amp;ndash;log-stream-name-prefix 2021/10/21&lt;/p&gt;

&lt;p&gt;aws logs get-log-events &amp;ndash;cli-input-json file://log-events.json
```&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
