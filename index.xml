<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wubigo on wubigo</title>
    <link>https://wubigo.com/</link>
    <description>Recent content in wubigo on wubigo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 18 Mar 2022 10:58:46 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Edgex Onvif Device Dev Setup</title>
      <link>https://wubigo.com/post/edgex-onvif-device-dev-setup/</link>
      <pubDate>Fri, 18 Mar 2022 10:58:46 +0800</pubDate>
      
      <guid>https://wubigo.com/post/edgex-onvif-device-dev-setup/</guid>
      <description>

&lt;h1 id=&#34;启动edgex核心服务&#34;&gt;启动EDGEX核心服务&lt;/h1&gt;

&lt;h2 id=&#34;使用容器主机网络&#34;&gt;使用容器主机网络&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;wget https://raw.githubusercontent.com/edgexfoundry/edgex-compose/jakarta/docker-compose-no-secty.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在开发环境使用host网络，便于核心服务和各种设备能在同一个子网，替换&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;networks:
      edgex-network: {}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;network_mode: host
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;consul&#34;&gt;CONSUL&lt;/h3&gt;

&lt;p&gt;配置CONSUL绑定到指定以太网卡&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;environment:
      CONSUL_BIND_INTERFACE: ens3
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;配置dns&#34;&gt;配置DNS&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;/etc/hosts&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;10.166.44.182 edgex-core-consul
10.166.44.182 edgex-core-command
10.166.44.182 edgex-redis
10.166.44.182 edgex-core-metadata
10.166.44.182 edgex-core-data
10.166.44.182 edgex-support-notifications
10.166.44.182 edgex-support-scheduler
10.166.44.182 edgex-ui-go
10.166.44.182 edgex-kuiper
10.166.44.182 edgex-app-rules-engine
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;启动核心服务&#34;&gt;启动核心服务&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;docker-compose -f docker-compose-no-secty.yml up -d 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;检查核心服务启动正常&#34;&gt;检查核心服务启动正常&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;docker logs -f edgex-core-command edgex-core-data edgex-core-metadata
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;在本地启动设备服务&#34;&gt;在本地启动设备服务&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;git clone git@github.com:edgexfoundry/device-camera-go.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改&lt;code&gt;cmd\res\configuration.toml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;注册服务，消息队列，核心服务的所在的主机配置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[Registry]
Type = &amp;quot;consul&amp;quot;
Host = &amp;quot;10.166.44.182&amp;quot;
Port = 8500

[MessageQueue]
Protocol = &amp;quot;redis&amp;quot;
Host = &amp;quot;10.166.44.182&amp;quot;

[Clients.core-data]
  Protocol = &amp;quot;http&amp;quot;
  Host = &amp;quot;10.166.44.182&amp;quot;
  Port = 59880

  [Clients.core-metadata]
  Protocol = &amp;quot;http&amp;quot;
  Host = &amp;quot;10.166.44.182&amp;quot;
  Port = 59881
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;连接onvif摄像头&#34;&gt;连接ONVIF摄像头&lt;/h2&gt;

&lt;h2 id=&#34;启动onvif摄像头服务&#34;&gt;启动ONVIF摄像头服务&lt;/h2&gt;

&lt;h2 id=&#34;启动设备服务&#34;&gt;启动设备服务&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;cd device-camera-go/cmd
set EDGEX_SECURITY_SECRET_STORE=false
go run main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;查看设备资源&#34;&gt;查看设备资源&lt;/h2&gt;

&lt;p&gt;curl -X GET &lt;a href=&#34;http://10.166.44.182:59882/api/v2/device/name/Camera001&#34; target=&#34;_blank&#34;&gt;http://10.166.44.182:59882/api/v2/device/name/Camera001&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;建议：请使用postman测试，&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifSnapshot&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifSnapshot&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifSnapshot&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;Binary&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifHostname&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifHostname&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifHostname&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            }
````

postmana返回的路径可以直接点击，并直接调用相应的资源

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://10.166.44.182:59882/api/v2/device/name/Camera001/OnvifSnapshot&#34; target=&#34;_blank&#34;&gt;http://10.166.44.182:59882/api/v2/device/name/Camera001/OnvifSnapshot&lt;/a&gt;
```&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>如何实现Edgex设备服务</title>
      <link>https://wubigo.com/post/edgex-device-service-onvif/</link>
      <pubDate>Thu, 17 Mar 2022 17:29:55 +0800</pubDate>
      
      <guid>https://wubigo.com/post/edgex-device-service-onvif/</guid>
      <description>

&lt;h1 id=&#34;加载设备配置文件&#34;&gt;加载设备配置文件&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;device-sdk-go:
service.init.go:   
       driver.Initialize
             initializeOnvifClient
                onvif4go.NewOnvifDevice.Initialize()
       provision.LoadProfiles(ds.config.Device.ProfilesDir, dic)
       provision.LoadDevices

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;驱动服务客户端初始化与核心数据和命令服务&#34;&gt;驱动服务客户端初始化与核心数据和命令服务&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;clients.BootstrapHandler -&amp;gt; InitDependencyClients

// InitDependencyClients triggers Service Client Initializer to establish connection to Metadata and Core Data Services
// through Metadata Client and Core Data Client.
// Service Client Initializer also needs to check the service status of Metadata and Core Data Services,
// because they are important dependencies of Device Service.
// The initialization process should be pending until Metadata Service and Core Data Service are both available.
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;驱动&#34;&gt;驱动&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;func (d *Driver) Initialize     -&amp;gt;    loadCameraConfig
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;diff --git a/internal/driver/driver.go b/internal/driver/driver.go

@@ -388,7 +389,7 @@ func (d *Driver) Initialize(lc logger.LoggingClient, asyncCh 
-
+       debug.PrintStack()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;runtime/debug.Stack()
        C:/local/go/src/runtime/debug/stack.go:24 +0x7a
runtime/debug.PrintStack()
        C:/local/go/src/runtime/debug/stack.go:16 +0x19
github.com/edgexfoundry/device-camera-go/internal/driver.(*Driver).Initialize(0xc00034fa00, {0x14495f0, 0xc0003714a0}, 0xc000480060, 0x0)        
        D:/code/go/src/github.com/edgexfoundry/device-camera-go/internal/driver/driver.go:392 +0xc7
github.com/edgexfoundry/device-sdk-go/v2/pkg/service.(*Bootstrap).BootstrapHandler(0xc0000d26e0, {0x14408d8, 0xc00036b0c0}, 0xc000388680, {{0xc08
38af7a5288f3c, 0xf37d35, 0x17238c0}, 0xdf8475800, 0x3b9aca00}, 0xc00034fa80)
        D:/code/go/pkg/mod/github.com/edgexfoundry/device-sdk-go/v2@v2.2.0-dev.8/pkg/service/init.go:55 +0x62d
github.com/edgexfoundry/go-mod-bootstrap/v2/bootstrap.RunAndReturnWaitGroup({0x14408d8, 0xc00036b0c0}, 0xc0003827f0, {0x1446b90, 0xc000351500}, {
0x13d7f8f, 0xd}, {0x13d868d, 0xe}, {0x1445710, ...}, ...)
        D:/code/go/pkg/mod/github.com/edgexfoundry/go-mod-bootstrap/v2@v2.1.0/bootstrap/bootstrap.go:158 +0xa33
github.com/edgexfoundry/go-mod-bootstrap/v2/bootstrap.Run({0x14408d8, 0xc00036b0c0}, 0xc0003827f0, {0x1446b90, 0xc000351500}, {0x13d7f8f, 0xd}, {
0x13d868d, 0xe}, {0x1445710, ...}, ...)
        D:/code/go/pkg/mod/github.com/edgexfoundry/go-mod-bootstrap/v2@v2.1.0/bootstrap/bootstrap.go:184 +0x19c
github.com/edgexfoundry/device-sdk-go/v2/pkg/service.Main({0x13d7f8f, 0xd}, {0x13e0370, 0x1a}, {0x1391bc0, 0xc00034fa00}, {0x14408d8, 0xc00036b0c
0}, 0xc0003827f0, 0xc0002c1bc0)
        D:/code/go/pkg/mod/github.com/edgexfoundry/device-sdk-go/v2@v2.2.0-dev.8/pkg/service/main.go:66 +0x9b3
github.com/edgexfoundry/device-sdk-go/v2/pkg/startup.Bootstrap({0x13d7f8f, 0xd}, {0x13e0370, 0x1a}, {0x1391bc0, 0xc00034fa00})
        D:/code/go/pkg/mod/github.com/edgexfoundry/device-sdk-go/v2@v2.2.0-dev.8/pkg/startup/bootstrap.go:19 +0x11a
main.main()
        D:/code/go/src/github.com/edgexfoundry/device-camera-go/cmd/main.go:22 +0x4c

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;onvifclient&#34;&gt;OnvifClient&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/faceterteam/onvif4go&#34; target=&#34;_blank&#34;&gt;onvif4go&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;onvif网络视频设备&#34;&gt;ONVIF网络视频设备&lt;/h2&gt;

&lt;p&gt;ONVIF提供一系列被清楚定义的网络服务给符合ONVIF标准的设备及客户。此外，一些条件功能只能在特定的产品中才能实现。例如要实现摄像机的PTZ功能，必须要在接口处提供特定的支持服务才可以实现，可选的服务也都须被定义。产品必须详细说明所支持的服务及功能。在开发上非常简便，软件客户端可以查询符合ONVIF标准的设备，获取产品的服务与功能列表。例如图像服务是可选受理的服务，客户端可以通过设备管理服务的“能力获取”（GetCapabilities）查询该服务的可用性。这意味着集成商可以在软件中自动侦测产品所支持的服务及功能&lt;/p&gt;

&lt;h1 id=&#34;device-usb-camera&#34;&gt;device-usb-camera&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;wget https://raw.githubusercontent.com/pimlie/ubuntu-mainline-kernel.sh/master/ubuntu-mainline-kernel.sh

ubuntu-mainline-kernel.sh -i v5.10.0

wget http://launchpadlibrarian.net/520233550/linux-libc-dev_5.10.0-14.15_amd64.deb
dpkg -i linux-libc-dev_5.10.0-14.15_amd64.deb

sudo  dpkg-query -L linux-libc-dev | grep videodev2.h
/usr/include/linux/videodev2.h

export EDGEX_SECURITY_SECRET_STORE=false
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;device-profile-for-onvifsnapshot&#34;&gt;device profile for OnvifSnapshot&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;deviceResources:
  - name: &amp;quot;OnvifSnapshot&amp;quot;
      description: &amp;quot;snapshot from first ONVIF MediaProfile&amp;quot;
      properties:
        valueType: &amp;quot;Binary&amp;quot;
        readWrite: &amp;quot;R&amp;quot;
        mediaType: &amp;quot;image/jpeg&amp;quot;
deviceCommands:
  - name: &amp;quot;OnvifSnapshot&amp;quot;
    isHidden: false
    readWrite: &amp;quot;R&amp;quot;
    resourceOperations:
      - { deviceResource: &amp;quot;OnvifSnapshot&amp;quot; }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;http://&lt;device-service&gt;:59985/api/v2/device/name/Camera001/OnvifSnapshot&lt;/p&gt;

&lt;p&gt;下载的文件为CBOR编码。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>搭建Edgex设备服务开发环境</title>
      <link>https://wubigo.com/post/edgex-device-service-dev-env-setup/</link>
      <pubDate>Fri, 11 Mar 2022 15:39:42 +0800</pubDate>
      
      <guid>https://wubigo.com/post/edgex-device-service-dev-env-setup/</guid>
      <description>

&lt;p&gt;搭建EDGEX设备服务开发环境&lt;/p&gt;

&lt;h1 id=&#34;edgex简介&#34;&gt;EDGEX简介&lt;/h1&gt;

&lt;p&gt;EdgeX Foundry 项目成立于2017年，由Linux 基金会主持，目前已经拥有75个会员， 包括重量级的SAMSUNG，Dell，AMD，ANALOG DEVICES &amp;hellip; 但其中最重要的角色其实是戴尔。它为EdgeX Foundry提供该公司采用Apache 2.0许可证的FUSE源代码。FUSE包括10多种微服务和12500多万行代码，它们在连接标准、边缘分析、安全、系统管理和服务之间提供了互操作性。我发现在科普的过程中，会不断的引入新概念，然后就得嵌套解释新名词和概念。那FUSE 又是什么？FUSE 是Dell 为了拓展边缘计算物联网服务而发展出来的，基于Java SPRING CLOUD 的微服务框架软件。这套软件最大的特征是中立于任何硬件平台和操作系统，高度模块化，可自由扩展。Dell 从私有化完成的那天开始，我们见到它一系列的并购，其中并购VMware，EMC 等动作，都直接剑指云计算和物联网技术。FUSE 的发布，更昭示了Dell谋求转型的决心。物联网的繁荣非常地依赖于物联网生态企业，全球大型IT 公司谋求物联网布局，都会提供框架软件，再培养生态伙伴来形成落地应用。而在生态伙伴的培养过程中，开源的基础框架软件是非常容易被理解和吸收的。 这也是Dell 选择跟Linux 基金会合作，并捐赠和完善代码的重要原因：Dell 需要庞大的生态伙伴，而Linux 具有开源软件界强大的号召力和影响力。&lt;/p&gt;

&lt;p&gt;EdgeX Foundry原来是用Java写的，导致平台体积庞大，占用资源，后来Linux基金会用Go语言对其进行了重构.&lt;/p&gt;

&lt;p&gt;EdgeX Foundry是一系列松耦合、开源的微服务集合。该微服务集合构成了四个微服务层及两个增强的基础系统服务，这四个微服务层包含了从物理域数据采集到信息域数据处理等一系列的服务，另外两个基础系统服务为该四个服务层提供支撑服务。&lt;/p&gt;

&lt;p&gt;四个微服务层分别是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;设备服务负责采集数据及控制设备功能。&lt;/li&gt;
&lt;li&gt;核心服务负责本地存储分析和转发数据，以及控制命令下发。&lt;/li&gt;
&lt;li&gt;支持服务负责日志记录、任务调度、数据清理、规则引擎和告警通知。&lt;/li&gt;
&lt;li&gt;应用服务/导出服务负责上传数据到云端或第三方信息系统，以及接收控制命令转发给核心服务。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;两个增强基础系统服务：&lt;/p&gt;

&lt;p&gt;安全服务、管理服务这两个软件模块虽然不直接处理边缘计算的功能性业务，但是对于边缘计算的安全性和易用性来说很重要&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/post/edgex-svr.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;启动edgex核心服务&#34;&gt;启动EDGEX核心服务&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;wget https://raw.githubusercontent.com/edgexfoundry/edgex-compose/jakarta/docker-compose-no-secty.yml


 docker-compose -f docker-compose-no-secty.yml up -d
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;打开数据和控制服务调试开关&#34;&gt;打开数据和控制服务调试开关&lt;/h1&gt;

&lt;p&gt;在consul里面配置应用：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://localhost:8500/ui/dc1/kv/edgex/appservices/2.0/app-rules-engine/Writable/LogLevel/edit&#34; target=&#34;_blank&#34;&gt;http://localhost:8500/ui/dc1/kv/edgex/appservices/2.0/app-rules-engine/Writable/LogLevel/edit&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;修改INFO为DEBUG&lt;/p&gt;

&lt;h1 id=&#34;在ide里面启动设备服务&#34;&gt;在IDE里面启动设备服务&lt;/h1&gt;

&lt;p&gt;以IP摄像头设备服务为例&lt;/p&gt;

&lt;h2 id=&#34;打开webcam&#34;&gt;打开WEBCAM&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://wubigo.com/post/webcam-to-ip-camera/&#34; target=&#34;_blank&#34;&gt;webcam-to-ip-camera&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;配置开发环境&#34;&gt;配置开发环境&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;git clone git@github.com:edgexfoundry/device-camera-go.git
git checkout jakarta
cd device-camera-go
go mod tidy
set EDGEX_SECURITY_SECRET_STORE=false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;调整IDE的当前工作目录为：device-camera-go\cmd
否则，设备服务启动会找不到设备配置文件。&lt;/p&gt;

&lt;p&gt;或者移动资源文件到IDE当前工作目录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mv -rf cmd/res  .
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;打开设备服务调试日志并启动设备服务&#34;&gt;打开设备服务调试日志并启动设备服务&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;res/configuration.toml
@@ -1,5 +1,5 @@
 [Writable]
-LogLevel = &amp;quot;INFO&amp;quot;
+LogLevel = &amp;quot;DEBUG&amp;quot;



level=INFO ts=2022-03-11T08:13:54.8106393Z app=device-camera source=devices.go:87 msg=&amp;quot;Device Camera001 not found in Metadata, adding it ...&amp;quot;        
level=INFO ts=2022-03-11T08:13:54.8133486Z app=device-camera source=autodiscovery.go:33 msg=&amp;quot;AutoDiscovery stopped: disabled by configuration&amp;quot;       
level=INFO ts=2022-03-11T08:13:54.813521Z app=device-camera source=autodiscovery.go:42 msg=&amp;quot;AutoDiscovery stopped: ProtocolDiscovery not implemented&amp;quot;
level=INFO ts=2022-03-11T08:13:54.8137182Z app=device-camera source=message.go:50 msg=&amp;quot;Service dependencies resolved...&amp;quot;
level=INFO ts=2022-03-11T08:13:54.8137182Z app=device-camera source=message.go:51 msg=&amp;quot;Starting device-camera to be replaced by makefile &amp;quot;
level=INFO ts=2022-03-11T08:13:54.8137182Z app=device-camera source=message.go:55 msg=&amp;quot;Camera device service started&amp;quot;
level=INFO ts=2022-03-11T08:13:54.8137182Z app=device-camera source=message.go:58 msg=&amp;quot;Service started in: 649.0037ms&amp;quot;

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;在edgex-device-rest日志查看启动的设备服务&#34;&gt;在edgex-device-rest日志查看启动的设备服务&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;docker logs -f edgex-device-rest
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;配置设备文件&#34;&gt;配置设备文件&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[[DeviceList]]
Name = &amp;quot;Camera001&amp;quot;
ProfileName = &amp;quot;camera-bosch&amp;quot;
Location = &amp;quot;edgex lab&amp;quot;
  [DeviceList.Protocols]
    [DeviceList.Protocols.HTTP]
    Address = &amp;quot;localhost:56000&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;设备数据采集和控制&#34;&gt;设备数据采集和控制&lt;/h2&gt;

&lt;h3 id=&#34;查看设备所有的资源&#34;&gt;查看设备所有的资源&lt;/h3&gt;

&lt;p&gt;通过EDGEX元数据服务查看设备资源&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -X GET http://localhost:59882/api/v2/device/name/Camera001
{
    &amp;quot;apiVersion&amp;quot;: &amp;quot;v2&amp;quot;,
    &amp;quot;statusCode&amp;quot;: 200,
    &amp;quot;deviceCoreCommand&amp;quot;: {
        &amp;quot;deviceName&amp;quot;: &amp;quot;Camera001&amp;quot;,
        &amp;quot;profileName&amp;quot;: &amp;quot;camera-bosch&amp;quot;,
        &amp;quot;coreCommands&amp;quot;: [
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifProfileInformation&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifProfileInformation&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifProfileInformation&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;TamperDetected&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/TamperDetected&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;TamperDetected&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;Bool&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;occupancy&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/occupancy&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;occupancy&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;Uint32&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifReboot&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifReboot&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifReboot&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;Bool&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;counter&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/counter&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;counter&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;Uint32&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifDeviceInformation&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifDeviceInformation&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifDeviceInformation&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifDateTime&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifDateTime&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifDateTime&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifDns&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifDns&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifDns&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifNetworkProtocols&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifNetworkProtocols&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifNetworkProtocols&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifNetworkDefaultGateway&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifNetworkDefaultGateway&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifNetworkDefaultGateway&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifNetworkInterfaces&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifNetworkInterfaces&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifNetworkInterfaces&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifNtp&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifNtp&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifNtp&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifUsers&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifUsers&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifUsers&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifSnapshot&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifSnapshot&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifSnapshot&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;Binary&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifUser&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifUser&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifUser&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifHostname&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifHostname&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifHostname&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;MotionDetected&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/MotionDetected&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;MotionDetected&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;Bool&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifStreamURI&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifStreamURI&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifStreamURI&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;String&amp;quot;
                    }
                ]
            },
            {
                &amp;quot;name&amp;quot;: &amp;quot;OnvifHostnameFromDHCP&amp;quot;,
                &amp;quot;get&amp;quot;: true,
                &amp;quot;set&amp;quot;: true,
                &amp;quot;path&amp;quot;: &amp;quot;/api/v2/device/name/Camera001/OnvifHostnameFromDHCP&amp;quot;,
                &amp;quot;url&amp;quot;: &amp;quot;http://edgex-core-command:59882&amp;quot;,
                &amp;quot;parameters&amp;quot;: [
                    {
                        &amp;quot;resourceName&amp;quot;: &amp;quot;OnvifHostnameFromDHCP&amp;quot;,
                        &amp;quot;valueType&amp;quot;: &amp;quot;Bool&amp;quot;
                    }
                ]
            }
        ]
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;访问设备资源&#34;&gt;访问设备资源&lt;/h3&gt;

&lt;p&gt;设备的资源地址为上面接口返回的信息：url+path  (设备控制服务)&lt;/p&gt;

&lt;p&gt;例如: &lt;a href=&#34;http://edgex-core-command:59882/api/v2/device/name/Camera001/OnvifHostnameFromDHCP&#34; target=&#34;_blank&#34;&gt;OnvifHostnameFromDHCP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;设备控制服务会调用实际的设备服务的API:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker logs -f edgex-core-command 

edgex-core-command           | level=ERROR ts=2022-03-11T08:23:01.759949942Z app=core-command source=http.go:47 X-Correlation-ID=8a4c186d-6f40-464f-be03-b5e67c866d3b msg=&amp;quot;failed to send a http request -&amp;gt; Get \&amp;quot;http://localhost:59985/api/v2/device/name/Camera001/OnvifHostname\&amp;quot;: dial tcp 127.0.0.1:59985: connect: connection refused&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因为设备服务启动的时候，配置的ip为LOCALHOST, 容器内现在无法访问到设备服务实例API, 所以连接拒绝&lt;/p&gt;

&lt;p&gt;在设备服务所在网络浏览器直接上面的地址即可&lt;/p&gt;

&lt;h1 id=&#34;清理测试环境&#34;&gt;清理测试环境&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;docker-compose -f docker-compose-no-secty.yml down
docker volume rm $(docker volume ls -q)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>OpenAPI vs AsyncAPI</title>
      <link>https://wubigo.com/post/openapi-vs-asyncapi/</link>
      <pubDate>Sat, 26 Feb 2022 21:55:15 +0800</pubDate>
      
      <guid>https://wubigo.com/post/openapi-vs-asyncapi/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/post/multi-runtime.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/post/openap-vs-asyncapi-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/post/openap-vs-asyncapi-2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;[1] &lt;a href=&#34;https://www.asyncapi.com/docs/getting-started/coming-from-openapi&#34; target=&#34;_blank&#34;&gt;https://www.asyncapi.com/docs/getting-started/coming-from-openapi&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>虎年新春快乐</title>
      <link>https://wubigo.com/post/happy-lunar-new-year-of-tiger/</link>
      <pubDate>Tue, 01 Feb 2022 09:37:46 +0800</pubDate>
      
      <guid>https://wubigo.com/post/happy-lunar-new-year-of-tiger/</guid>
      <description>&lt;p&gt;虎年新春快乐&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Maybe this year, we ought to walk through the rooms of our lives not
looking for flaws, but looking for potential—Ellen Goodman&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>2021 Notes</title>
      <link>https://wubigo.com/post/notes-2021/</link>
      <pubDate>Sat, 01 Jan 2022 16:59:00 +0800</pubDate>
      
      <guid>https://wubigo.com/post/notes-2021/</guid>
      <description>

&lt;h2 id=&#34;社会价值&#34;&gt;社会价值&lt;/h2&gt;

&lt;p&gt;个人的价值在于为别人和社会解决问题和提供帮助，在帮助别人的过程
中促进个人成长。读书不是目的，读书只是为大脑提供了输入，产生对
社会有用的输出才是读书的真正目的&lt;/p&gt;

&lt;h2 id=&#34;思考&#34;&gt;思考&lt;/h2&gt;

&lt;p&gt;思考比行动重要。害怕思考，草率行动是懒惰的表现。思考就是抑制动物的
本性过程，思考是个人成长的最快途径&lt;/p&gt;

&lt;h2 id=&#34;沟通&#34;&gt;沟通&lt;/h2&gt;

&lt;p&gt;理解对方是沟通的前提条件。沟通就是让对方认识到自己提议的价值，
让对方受益。无论沟通的对象是朋友，家人，同事，不要首先想着
如何改变别人，重要的调整自己。&lt;/p&gt;

&lt;h2 id=&#34;业务和技术&#34;&gt;业务和技术&lt;/h2&gt;

&lt;p&gt;软件解决方案的出发点是解决客户问题。解决问题与技术的先进性与否无关，
很多情况下解决方案取决于公司的组织形式和资源条件。运维成本是大型
软件解决方案最主要的成本。监控的目的在于预防失败。
越早发现问题，解决成本越低。&lt;/p&gt;

&lt;h2 id=&#34;知识积累&#34;&gt;知识积累&lt;/h2&gt;

&lt;p&gt;价值与风险是统一的，看待机会既要看到可能的价值，同时认识到风险。
巨大的价值必然伴随着巨大的风险。偶然发现的所谓的价值机会可能只是
一个无知陷阱。知识和财富不仅在于积累更在于传承。财富最重要的是
在于保值。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mainflux Dev Setup</title>
      <link>https://wubigo.com/post/mainflux-dev-setup/</link>
      <pubDate>Mon, 20 Dec 2021 17:04:37 +0800</pubDate>
      
      <guid>https://wubigo.com/post/mainflux-dev-setup/</guid>
      <description>

&lt;h1 id=&#34;build&#34;&gt;BUILD&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p $GOPATH/src/github.com/mailflux
git clone https://github.com/wubigo/mainflux.git
cd github.com/mailflux/mailflux/
make
make dockers_dev
make run
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;provision-the-system&#34;&gt;Provision the System&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;mainflux-cli provision test
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;get-token&#34;&gt;GET TOKEN&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;curl -k https://172.21.53.253/tokens

{
  &amp;quot;email&amp;quot;: &amp;quot;bold_gould@email.com&amp;quot;,
  &amp;quot;password&amp;quot;: &amp;quot;12345678&amp;quot;
}

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Connect KEPServer to Ali IoT</title>
      <link>https://wubigo.com/post/connect-kepserver-to-ali-iot/</link>
      <pubDate>Thu, 16 Dec 2021 13:40:38 +0800</pubDate>
      
      <guid>https://wubigo.com/post/connect-kepserver-to-ali-iot/</guid>
      <description>

&lt;p&gt;Configure an MQTT Client Agent within the IoT Gateway Plug-In for KEPServerEX&lt;/p&gt;

&lt;p&gt;to send data to Ali IoT. The connection can be made using MQTT over Transmission&lt;/p&gt;

&lt;p&gt;Control Protocol (TCP) and MQTT over Transport Layer Security (TLS).&lt;/p&gt;

&lt;p&gt;set up Kepware KEPServerEX IoT Gateway on Windows to connect with the MQTT bridge&lt;/p&gt;

&lt;p&gt;of IoT Core to push streaming data to Cloud and send control messages from IoT&lt;/p&gt;

&lt;p&gt;Core back to KEPServerEX&lt;/p&gt;

&lt;p&gt;IoT Gateway is a module that provides integration with external IT systems&lt;/p&gt;

&lt;p&gt;and cloud platforms through a series of protocols such as MQTT and HTTP.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/post/kepserverex-iot.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A random value simulator sends values to IoT Gateway.&lt;/li&gt;
&lt;li&gt;Values go through the IoT Gateway to IoT Core.&lt;/li&gt;
&lt;li&gt;IoT Core bridges the values to Pub/Sub.&lt;/li&gt;
&lt;li&gt;Users send command messages through IoT Core.&lt;/li&gt;
&lt;li&gt;Command messages go through IoT Core to the IoT Gateway.&lt;/li&gt;
&lt;li&gt;IoT Gateway delivers the messages to the simulated device.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;setup&#34;&gt;setup&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Install Kepware KEPServerEX.&lt;/li&gt;
&lt;li&gt;Install PowerShell.&lt;/li&gt;
&lt;li&gt;Create or select a Cloud project.&lt;/li&gt;
&lt;li&gt;Enable Kepware KEPServerEX Configuration API Service.&lt;/li&gt;
&lt;li&gt;Install the Cloud SDK.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;detail&#34;&gt;detail&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Generate a self-signed certificate authority (CA) certificate.&lt;/li&gt;
&lt;li&gt;Provision an IoT Core device on Google Cloud.&lt;/li&gt;
&lt;li&gt;Configure Kepware KEPServerEX IoT Gateway as an IoT Core device.&lt;/li&gt;
&lt;li&gt;Set up a Windows scheduled task to refresh the JSON Web Token (JWT).&lt;/li&gt;
&lt;li&gt;Set up the Kepware KEPServerEX IoT Gateway to send simulated metrics to IoT Core, and verify on Pub/Sub.&lt;/li&gt;
&lt;li&gt;Set up the Kepware KEPServerEX IoT Gateway to receive command messages and send commands from IoT Core.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;data-collect&#34;&gt;data collect&lt;/h1&gt;

&lt;p&gt;Read data from onsite equipment using industrial protocols such as OPC-UA, Modbus and  EtherNet/IP&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Data Lake vs Warehouse</title>
      <link>https://wubigo.com/post/data-lake-vs-warehouse/</link>
      <pubDate>Tue, 07 Dec 2021 15:58:21 +0800</pubDate>
      
      <guid>https://wubigo.com/post/data-lake-vs-warehouse/</guid>
      <description>&lt;p&gt;Data catalogs solve the problem by tagging fields and data sets with consistent business
terms and providing a shopping-type interface that allows the users to find data
sets by describing what they are looking for using the business terms that they are
used to, and to understand the data in those data sets through tags and descriptions
that use business terms.&lt;/p&gt;

&lt;p&gt;Data lakes are the do-it-yourself version of a data warehouse, allowing data engineering teams to pick and choose the various metadata, storage, and compute technologies they want to use depending on the needs of their systems.
Data lakes are ideal for data teams looking to build a more customized platform, often supported by a handful (or more) of data engineers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/data-lake-stack.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://towardsdatascience.com/how-to-build-your-data-platform-choosing-a-cloud-data-warehouse&#34; target=&#34;_blank&#34;&gt;https://towardsdatascience.com/how-to-build-your-data-platform-choosing-a-cloud-data-warehouse&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.alibabacloud.com/blog/alibaba-cloud-maxcompute-vs--aws-redshift-azure-sql-data-warehouse&#34; target=&#34;_blank&#34;&gt;https://www.alibabacloud.com/blog/alibaba-cloud-maxcompute-vs--aws-redshift-azure-sql-data-warehouse&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Azure Config</title>
      <link>https://wubigo.com/post/azure-config/</link>
      <pubDate>Sun, 07 Nov 2021 20:00:24 +0800</pubDate>
      
      <guid>https://wubigo.com/post/azure-config/</guid>
      <description>

&lt;h1 id=&#34;配置&#34;&gt;配置&lt;/h1&gt;

&lt;p&gt;&amp;rsquo;.azure/config`&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[defaults]
location = westus

[cloud]
name = AzureCloud

[core]
output = table
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;az config set defaults.location=westus2 defaults.group=MyResourceGroup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;az v2不支持config，直接修改配置文件&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Azure Function From Cmd</title>
      <link>https://wubigo.com/post/azure-function-from-cmd/</link>
      <pubDate>Sun, 07 Nov 2021 10:50:49 +0800</pubDate>
      
      <guid>https://wubigo.com/post/azure-function-from-cmd/</guid>
      <description>

&lt;h1 id=&#34;azure-region&#34;&gt;AZURE REGION&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;az account list-locations --query &amp;quot;sort_by([].{DisplayName:displayName, Name:name}, &amp;amp;DisplayName)&amp;quot; --output table
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;创建函数app&#34;&gt;创建函数APP&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

# Function app and storage account names must be unique.
storageName=mystorageaccount$RANDOM
functionAppName=myserverlessfunc$RANDOM
region=westeurope

# Create a resource group.
az group create --name myResourceGroup --location $region

# Create an Azure storage account in the resource group.
az storage account create \
  --name $storageName \
  --location $region \
  --resource-group myResourceGroup \
  --sku Standard_LRS

# Create a serverless function app in the resource group.
az functionapp create \
  --name $functionAppName \
  --storage-account $storageName \
  --consumption-plan-location $region \
  --resource-group myResourceGroup \
  --functions-version 2

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Lambda in Azure With Azure Functions Core Tools</title>
      <link>https://wubigo.com/post/lambda-in-azure-with-azure-functions-core-tools/</link>
      <pubDate>Sat, 06 Nov 2021 23:07:10 +0800</pubDate>
      
      <guid>https://wubigo.com/post/lambda-in-azure-with-azure-functions-core-tools/</guid>
      <description>

&lt;h1 id=&#34;安装func&#34;&gt;安装FUNC&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;npm i -D azure-functions-core-tools@3

export PATH=./

export CLI_DEBUG=1

func host start --verbose

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;安装playwright-chromium&#34;&gt;安装playwright-chromium&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;export PLAYWRIGHT_BROWSERS_PATH=0
npm install playwright-chromium@1.3.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;确认chrome的存放路径&lt;/p&gt;

&lt;p&gt;&lt;code&gt;node_modules/playwright-chromium/.local-browsers/chromium-792639&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;创建函数&#34;&gt;创建函数&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;/home/ubuntu/sls/azure-sls/node_modules/.bin/func  init
func new
func start
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;本地测试&#34;&gt;本地测试&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;export CLI_DEBUG=1
func host start --verbose
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;host.json&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;version&amp;quot;: &amp;quot;2.0&amp;quot;,
  &amp;quot;logging&amp;quot;: {
    &amp;quot;applicationInsights&amp;quot;: {
      &amp;quot;samplingSettings&amp;quot;: {
        &amp;quot;isEnabled&amp;quot;: true,
        &amp;quot;excludedTypes&amp;quot;: &amp;quot;Request&amp;quot;
      }
    }
  },
  &amp;quot;extensionBundle&amp;quot;: {
    &amp;quot;id&amp;quot;: &amp;quot;Microsoft.Azure.Functions.ExtensionBundle&amp;quot;,
    &amp;quot;version&amp;quot;: &amp;quot;[2.*, 3.0.0)&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果遇到如下问题&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Value cannot be null. (Parameter &amp;lsquo;provider&amp;rsquo;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;注释/禁用 extensionBundle&lt;/p&gt;

&lt;h1 id=&#34;发布&#34;&gt;发布&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;func azure functionapp publish my_function_app_name  --build remote
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;总结&#34;&gt;总结&lt;/h1&gt;

&lt;p&gt;部署节点和运行环境在同一可用区加快部署速度&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lambda in Azure with sls</title>
      <link>https://wubigo.com/post/lambda-in-azure-with-sls/</link>
      <pubDate>Sat, 06 Nov 2021 11:59:57 +0800</pubDate>
      
      <guid>https://wubigo.com/post/lambda-in-azure-with-sls/</guid>
      <description>

&lt;h1 id=&#34;创建函数&#34;&gt;创建函数&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;npm install -g serverless@2.65.0
sls -v

Framework Core: 2.65.0
Plugin: 5.5.1
SDK: 4.3.0
Components: 3.17.2

sls create -t azure-nodejs -p azure-fn
cd azure-fn
npm install

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;npm list |grep serverless-azure-functions
└─┬ serverless-azure-functions@2.1.3
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;部署函数&#34;&gt;部署函数&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;set AZURE_SUBSCRIPTION_ID=02a23ad5-
set AZURE_TENANT_ID=e9950462
set AZURE_CLIENT_ID=39258bc8
set AZURE_CLIENT_SECRET=hYdvD0
sls deploy --dryrun
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;测试&#34;&gt;测试&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;sls invoke -f hello -d &#39;{&amp;quot;name&amp;quot;: &amp;quot;Azure&amp;quot;}&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;清理&#34;&gt;清理&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;empty.json&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
&amp;quot;$schema&amp;quot;: &amp;quot;https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#&amp;quot;,
&amp;quot;contentVersion&amp;quot;: &amp;quot;1.0.0.0&amp;quot;,
&amp;quot;parameters&amp;quot;: { },
&amp;quot;variables&amp;quot;: { },
&amp;quot;resources&amp;quot;: [ ],
&amp;quot;outputs&amp;quot;: { }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;
az group deployment create --mode complete --template-file ./empty.json --resource-group testgroup
az group delete -n testgroup -y
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Quasar App Flow</title>
      <link>https://wubigo.com/post/quasar-app-flow/</link>
      <pubDate>Thu, 28 Oct 2021 15:53:54 +0800</pubDate>
      
      <guid>https://wubigo.com/post/quasar-app-flow/</guid>
      <description>

&lt;h1 id=&#34;cquasar-app-flow&#34;&gt;CQuasar App Flow&lt;/h1&gt;

&lt;p&gt;In order to better understand how a boot file works and what it does, you need to understand how your website/app boots:&lt;/p&gt;

&lt;p&gt;Quasar is initialized (components, directives, plugins, Quasar i18n, Quasar icon sets)
Quasar Extras get imported (Roboto font – if used, icons, animations, …)
Quasar CSS &amp;amp; your app’s global CSS are imported
App.vue is loaded (not yet being used)
Store is imported (if using Vuex Store in src/store)
Router is imported (in src/router)
Boot files are imported
Router default export function executed
Boot files get their default export function executed
(if on Electron mode) Electron is imported and injected into Vue prototype
(if on Cordova mode) Listening for “deviceready” event and only then continuing with following steps
Instantiating Vue with root component and attaching to DOM&lt;/p&gt;

&lt;h1 id=&#34;vue组件脚手架&#34;&gt;Vue组件脚手架&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;quasar new --list
quasar new [type] &amp;lt;name of your component with optional subfolder&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建组件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;quasar new component com1
quasar new page page1

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;组件类型&#34;&gt;组件类型&lt;/h2&gt;

&lt;p&gt;layout, page, component , boot, store&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lambda Redeploy Across Region</title>
      <link>https://wubigo.com/post/lambda-redeploy-across-region/</link>
      <pubDate>Fri, 22 Oct 2021 11:59:36 +0800</pubDate>
      
      <guid>https://wubigo.com/post/lambda-redeploy-across-region/</guid>
      <description>

&lt;h1 id=&#34;计算时间-vs-请求数量&#34;&gt;计算时间 vs 请求数量&lt;/h1&gt;

&lt;h2 id=&#34;平均计算时长&#34;&gt;平均计算时长&lt;/h2&gt;

&lt;p&gt;427586 / 27386 = 15.6 (秒)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/aws-lambda-fee.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;设置默认配置&#34;&gt;设置默认配置&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aws configure list-profiles

default
us-east-1
us-east-2
us-west-2
us-west-1
eu
eu-west-1
af-south-1
ap-east-1
ap-south-1
ap-northeast-3
ap-northeast-2
ap-southeast-1
ap-southeast-2
ca-central-1
eu-west-2
eu-south-1
eu-west-3
eu-north-1
me-south-1
sa-east-1

export AWS_PROFILE=us
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;下载部署包&#34;&gt;下载部署包&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aws lambda get-function --function-name webdriver


&amp;quot;Code&amp;quot;: {
        &amp;quot;RepositoryType&amp;quot;: &amp;quot;S3&amp;quot;,
        &amp;quot;Location&amp;quot;: &amp;quot;https://awslambda-ap-ne-1-tasks.s3.ap-northeast-1.amazonaws.com/snapshots/webdriver-aeb2eb63-9baf-4d06-9d3a-79459b172200?versionId=a71tk2dwwmvW1lPNB5VHKq8SbGS3laqE&amp;amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHIaDmFwLW5vcnRoZWFzdC0xIkcwRQIhAMRkIxPh1Fkd2nlCzgiDbsrmnCZEVunHibw2Cm6cyRIUAiB5t60IO6iESPDeUsTuQEjGyLfI73QyMK1mJY9Al70yECqNBAj8%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDkxOTk4MDkyNTEzOSIMjVD0S8e1HGmJujr6KuEDO8SCL9OcolFOwL4IKMbE3euJLEtiGjSxH6c8jRPbnjp07Zf%2BxrOfJmWT2MORQs0RAQSLJV5nOFfRWTIPI4dSNhI3Q628XqklZ8%2BF1UktvA5vRdEU3LhDvOSsDCmL19k&amp;amp;X-Amz-Signature=7f876918ec5283db390a3037512e7ad62e434330ec3e406db18b25f25f3da0fe&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从Location下载部署包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PROF = &amp;quot;eu-central-1&amp;quot;

aws lambda create-function --function-name webdriver --runtime nodejs12.x --zip-file fileb:///home/ubuntu/webdriver.zip --handler index.handler  --role arn:aws:iam::762491489154:role/service-role/webdriver-role-3hxi35t5   --timeout 63 --memory-size 1024 --layers arn:aws:lambda:us-east-1:764866452798:layer:chrome-aws-lambda:25  --profile us
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;配置&#34;&gt;配置&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;role-policy.json&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;Version&amp;quot;: &amp;quot;2012-10-17&amp;quot;,
    &amp;quot;Statement&amp;quot;: [
    {
        &amp;quot;Effect&amp;quot;: &amp;quot;Allow&amp;quot;,
        &amp;quot;Principal&amp;quot;: {
            &amp;quot;Service&amp;quot;: [&amp;quot;lambda.amazonaws.com&amp;quot;]
    },
    &amp;quot;Action&amp;quot;: &amp;quot;sts:AssumeRole&amp;quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;aws iam create-role --role-name lambda-s3 --assume-role-policy-document file://role-policy.json
aws iam attach-role-policy --role-name lambda-s3 --policy-arn arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;测试&#34;&gt;测试&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;export AWS_PROFILE=eu-south-1
aws lambda invoke --function-name webdriver --cli-binary-format raw-in-base64-out --payload &#39;{&amp;quot;pageNo&amp;quot;: 5}&#39; out --log-type Tail --query &#39;LogResult&#39; --output text |  base64 -d
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;调度&#34;&gt;调度&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aws events put-rule --name webdriver-scheduled-rule --schedule-expression &#39;rate(30 minutes)&#39; 


aws lambda add-permission --function-name webdriver --statement-id webdriver-scheduled-event --action &#39;lambda:InvokeFunction&#39; --principal events.amazonaws.com --source-arn arn:aws:events:eu-central-1:762491489154:rule/webdriver-scheduled-rule


aws events put-targets --rule webdriver-scheduled-rule --targets file://targets.json
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;调整周期&#34;&gt;调整周期&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;aws events put-rule --name webdriver-scheduled-rule --schedule-expression &amp;quot;rate(10 minutes)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/wubigo/API/blob/master/bash/put-rule.sh&#34; target=&#34;_blank&#34;&gt;https://github.com/wubigo/API/blob/master/bash/put-rule.sh&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;自动&#34;&gt;自动&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;if [ -z &amp;quot;$1&amp;quot; ]
  then
    echo &amp;quot;No region supplied&amp;quot;
    exit 1
fi
export AWS_PROFILE=$1

FN=$(aws lambda create-function --function-name webdriver --runtime nodejs12.x --zip-file fileb:///home/ubuntu/webdriver.zip --handler index.handler  --role arn:aws:iam::762491:role/lambda-s3   --timeout 63 --memory-size 1024 --layers arn:aws:lambda:${AWS_PROFILE}:762491:layer:chrome-aws-lambda:25)
echo $FN

aws events put-rule --name webdriver-scheduled-rule --schedule-expression &#39;rate(30 minutes)&#39;


EVENT=$(aws lambda add-permission --function-name webdriver --statement-id webdriver-scheduled-event --action &#39;lambda:InvokeFunction&#39; --principal events.amazonaws.com --source-arn arn:aws:events:${AWS_PROFILE}:762491:rule/webdriver-scheduled-rule)
echo $EVENT

T=$(python3 targets.py ${AWS_PROFILE})
cat targets.json
aws events put-targets --rule webdriver-scheduled-rule --targets file://targets.json
sleep 5
awslogs streams /aws/lambda/webdriver
awslogs get /aws/lambda/webdriver --filter-pattern=&amp;quot;[r=REPORT,...]&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;禁止调用&#34;&gt;禁止调用&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt; aws lambda put-function-concurrency --function-name webdriver --reserved-concurrent-executions 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;function cannot be invoked while the reserved concurrency is zero.&lt;/p&gt;

&lt;p&gt;Calling the invoke API action failed with this message: Rate Exceeded.&lt;/p&gt;

&lt;h1 id=&#34;并发配额重置&#34;&gt;并发配额重置&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aws lambda delete-function-concurrency  --function-name webdriver
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;清理&#34;&gt;清理&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aws lambda remove-permission --function-name webdriver --statement-id webdriver-scheduled-event
aws events list-targets-by-rule --rule webdriver-scheduled-rule
aws events remove-targets --rule  webdriver-scheduled-rule --ids 1
aws events delete-rule --name &amp;quot;webdriver-scheduled-rule&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
