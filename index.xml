<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wubigo on wubigo</title>
    <link>https://wubigo.com/</link>
    <description>Recent content in wubigo on wubigo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Dec 2021 13:40:38 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Connect KEPServer to Ali IoT</title>
      <link>https://wubigo.com/post/connect-kepserver-to-ali-iot/</link>
      <pubDate>Thu, 16 Dec 2021 13:40:38 +0800</pubDate>
      
      <guid>https://wubigo.com/post/connect-kepserver-to-ali-iot/</guid>
      <description>&lt;p&gt;Configure an MQTT Client Agent within the IoT Gateway Plug-In for KEPServerEX&lt;/p&gt;

&lt;p&gt;to send data to Ali IoT. The connection can be made using MQTT over Transmission&lt;/p&gt;

&lt;p&gt;Control Protocol (TCP) and MQTT over Transport Layer Security (TLS)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Data Lake vs Warehouse</title>
      <link>https://wubigo.com/post/data-lake-vs-warehouse/</link>
      <pubDate>Tue, 07 Dec 2021 15:58:21 +0800</pubDate>
      
      <guid>https://wubigo.com/post/data-lake-vs-warehouse/</guid>
      <description>&lt;p&gt;Data catalogs solve the problem by tagging fields and data sets with consistent business
terms and providing a shopping-type interface that allows the users to find data
sets by describing what they are looking for using the business terms that they are
used to, and to understand the data in those data sets through tags and descriptions
that use business terms.&lt;/p&gt;

&lt;p&gt;Data lakes are the do-it-yourself version of a data warehouse, allowing data engineering teams to pick and choose the various metadata, storage, and compute technologies they want to use depending on the needs of their systems.
Data lakes are ideal for data teams looking to build a more customized platform, often supported by a handful (or more) of data engineers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/data-lake-stack.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://towardsdatascience.com/how-to-build-your-data-platform-choosing-a-cloud-data-warehouse&#34; target=&#34;_blank&#34;&gt;https://towardsdatascience.com/how-to-build-your-data-platform-choosing-a-cloud-data-warehouse&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.alibabacloud.com/blog/alibaba-cloud-maxcompute-vs--aws-redshift-azure-sql-data-warehouse&#34; target=&#34;_blank&#34;&gt;https://www.alibabacloud.com/blog/alibaba-cloud-maxcompute-vs--aws-redshift-azure-sql-data-warehouse&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Azure Config</title>
      <link>https://wubigo.com/post/azure-config/</link>
      <pubDate>Sun, 07 Nov 2021 20:00:24 +0800</pubDate>
      
      <guid>https://wubigo.com/post/azure-config/</guid>
      <description>

&lt;h1 id=&#34;配置&#34;&gt;配置&lt;/h1&gt;

&lt;p&gt;&amp;rsquo;.azure/config`&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[defaults]
location = westus

[cloud]
name = AzureCloud

[core]
output = table
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;az config set defaults.location=westus2 defaults.group=MyResourceGroup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;az v2不支持config，直接修改配置文件&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Azure Function From Cmd</title>
      <link>https://wubigo.com/post/azure-function-from-cmd/</link>
      <pubDate>Sun, 07 Nov 2021 10:50:49 +0800</pubDate>
      
      <guid>https://wubigo.com/post/azure-function-from-cmd/</guid>
      <description>

&lt;h1 id=&#34;azure-region&#34;&gt;AZURE REGION&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;az account list-locations --query &amp;quot;sort_by([].{DisplayName:displayName, Name:name}, &amp;amp;DisplayName)&amp;quot; --output table
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;创建函数app&#34;&gt;创建函数APP&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

# Function app and storage account names must be unique.
storageName=mystorageaccount$RANDOM
functionAppName=myserverlessfunc$RANDOM
region=westeurope

# Create a resource group.
az group create --name myResourceGroup --location $region

# Create an Azure storage account in the resource group.
az storage account create \
  --name $storageName \
  --location $region \
  --resource-group myResourceGroup \
  --sku Standard_LRS

# Create a serverless function app in the resource group.
az functionapp create \
  --name $functionAppName \
  --storage-account $storageName \
  --consumption-plan-location $region \
  --resource-group myResourceGroup \
  --functions-version 2

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Lambda in Azure With Azure Functions Core Tools</title>
      <link>https://wubigo.com/post/lambda-in-azure-with-azure-functions-core-tools/</link>
      <pubDate>Sat, 06 Nov 2021 23:07:10 +0800</pubDate>
      
      <guid>https://wubigo.com/post/lambda-in-azure-with-azure-functions-core-tools/</guid>
      <description>

&lt;h1 id=&#34;安装func&#34;&gt;安装FUNC&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;npm i -D azure-functions-core-tools@3

export PATH=./

export CLI_DEBUG=1

func host start --verbose

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;安装playwright-chromium&#34;&gt;安装playwright-chromium&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;export PLAYWRIGHT_BROWSERS_PATH=0
npm install playwright-chromium@1.3.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;确认chrome的存放路径&lt;/p&gt;

&lt;p&gt;&lt;code&gt;node_modules/playwright-chromium/.local-browsers/chromium-792639&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;创建函数&#34;&gt;创建函数&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;/home/ubuntu/sls/azure-sls/node_modules/.bin/func  init
func new
func start
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;本地测试&#34;&gt;本地测试&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;export CLI_DEBUG=1
func host start --verbose
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;host.json&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;version&amp;quot;: &amp;quot;2.0&amp;quot;,
  &amp;quot;logging&amp;quot;: {
    &amp;quot;applicationInsights&amp;quot;: {
      &amp;quot;samplingSettings&amp;quot;: {
        &amp;quot;isEnabled&amp;quot;: true,
        &amp;quot;excludedTypes&amp;quot;: &amp;quot;Request&amp;quot;
      }
    }
  },
  &amp;quot;extensionBundle&amp;quot;: {
    &amp;quot;id&amp;quot;: &amp;quot;Microsoft.Azure.Functions.ExtensionBundle&amp;quot;,
    &amp;quot;version&amp;quot;: &amp;quot;[2.*, 3.0.0)&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果遇到如下问题&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Value cannot be null. (Parameter &amp;lsquo;provider&amp;rsquo;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;注释/禁用 extensionBundle&lt;/p&gt;

&lt;h1 id=&#34;发布&#34;&gt;发布&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;func azure functionapp publish my_function_app_name  --build remote
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;总结&#34;&gt;总结&lt;/h1&gt;

&lt;p&gt;部署节点和运行环境在同一可用区加快部署速度&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lambda in Azure with sls</title>
      <link>https://wubigo.com/post/lambda-in-azure-with-sls/</link>
      <pubDate>Sat, 06 Nov 2021 11:59:57 +0800</pubDate>
      
      <guid>https://wubigo.com/post/lambda-in-azure-with-sls/</guid>
      <description>

&lt;h1 id=&#34;创建函数&#34;&gt;创建函数&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;npm install -g serverless@2.65.0
sls -v

Framework Core: 2.65.0
Plugin: 5.5.1
SDK: 4.3.0
Components: 3.17.2

sls create -t azure-nodejs -p azure-fn
cd azure-fn
npm install

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;npm list |grep serverless-azure-functions
└─┬ serverless-azure-functions@2.1.3
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;部署函数&#34;&gt;部署函数&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;set AZURE_SUBSCRIPTION_ID=02a23ad5-
set AZURE_TENANT_ID=e9950462
set AZURE_CLIENT_ID=39258bc8
set AZURE_CLIENT_SECRET=hYdvD0
sls deploy --dryrun
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;测试&#34;&gt;测试&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;sls invoke -f hello -d &#39;{&amp;quot;name&amp;quot;: &amp;quot;Azure&amp;quot;}&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;清理&#34;&gt;清理&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;empty.json&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
&amp;quot;$schema&amp;quot;: &amp;quot;https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#&amp;quot;,
&amp;quot;contentVersion&amp;quot;: &amp;quot;1.0.0.0&amp;quot;,
&amp;quot;parameters&amp;quot;: { },
&amp;quot;variables&amp;quot;: { },
&amp;quot;resources&amp;quot;: [ ],
&amp;quot;outputs&amp;quot;: { }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;
az group deployment create --mode complete --template-file ./empty.json --resource-group testgroup
az group delete -n testgroup -y
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Quasar App Flow</title>
      <link>https://wubigo.com/post/quasar-app-flow/</link>
      <pubDate>Thu, 28 Oct 2021 15:53:54 +0800</pubDate>
      
      <guid>https://wubigo.com/post/quasar-app-flow/</guid>
      <description>

&lt;h1 id=&#34;cquasar-app-flow&#34;&gt;CQuasar App Flow&lt;/h1&gt;

&lt;p&gt;In order to better understand how a boot file works and what it does, you need to understand how your website/app boots:&lt;/p&gt;

&lt;p&gt;Quasar is initialized (components, directives, plugins, Quasar i18n, Quasar icon sets)
Quasar Extras get imported (Roboto font – if used, icons, animations, …)
Quasar CSS &amp;amp; your app’s global CSS are imported
App.vue is loaded (not yet being used)
Store is imported (if using Vuex Store in src/store)
Router is imported (in src/router)
Boot files are imported
Router default export function executed
Boot files get their default export function executed
(if on Electron mode) Electron is imported and injected into Vue prototype
(if on Cordova mode) Listening for “deviceready” event and only then continuing with following steps
Instantiating Vue with root component and attaching to DOM&lt;/p&gt;

&lt;h1 id=&#34;vue组件脚手架&#34;&gt;Vue组件脚手架&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;quasar new --list
quasar new [type] &amp;lt;name of your component with optional subfolder&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建组件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;quasar new component com1
quasar new page page1

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;组件类型&#34;&gt;组件类型&lt;/h2&gt;

&lt;p&gt;layout, page, component , boot, store&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lambda Redeploy Across Region</title>
      <link>https://wubigo.com/post/lambda-redeploy-across-region/</link>
      <pubDate>Fri, 22 Oct 2021 11:59:36 +0800</pubDate>
      
      <guid>https://wubigo.com/post/lambda-redeploy-across-region/</guid>
      <description>

&lt;h1 id=&#34;计算时间-vs-请求数量&#34;&gt;计算时间 vs 请求数量&lt;/h1&gt;

&lt;h2 id=&#34;平均计算时长&#34;&gt;平均计算时长&lt;/h2&gt;

&lt;p&gt;427586 / 27386 = 15.6 (秒)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/aws-lambda-fee.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;设置默认配置&#34;&gt;设置默认配置&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aws configure list-profiles

default
us-east-1
us-east-2
us-west-2
us-west-1
eu
eu-west-1
af-south-1
ap-east-1
ap-south-1
ap-northeast-3
ap-northeast-2
ap-southeast-1
ap-southeast-2
ca-central-1
eu-west-2
eu-south-1
eu-west-3
eu-north-1
me-south-1
sa-east-1

export AWS_PROFILE=us
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;下载部署包&#34;&gt;下载部署包&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aws lambda get-function --function-name webdriver


&amp;quot;Code&amp;quot;: {
        &amp;quot;RepositoryType&amp;quot;: &amp;quot;S3&amp;quot;,
        &amp;quot;Location&amp;quot;: &amp;quot;https://awslambda-ap-ne-1-tasks.s3.ap-northeast-1.amazonaws.com/snapshots/webdriver-aeb2eb63-9baf-4d06-9d3a-79459b172200?versionId=a71tk2dwwmvW1lPNB5VHKq8SbGS3laqE&amp;amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjEHIaDmFwLW5vcnRoZWFzdC0xIkcwRQIhAMRkIxPh1Fkd2nlCzgiDbsrmnCZEVunHibw2Cm6cyRIUAiB5t60IO6iESPDeUsTuQEjGyLfI73QyMK1mJY9Al70yECqNBAj8%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDkxOTk4MDkyNTEzOSIMjVD0S8e1HGmJujr6KuEDO8SCL9OcolFOwL4IKMbE3euJLEtiGjSxH6c8jRPbnjp07Zf%2BxrOfJmWT2MORQs0RAQSLJV5nOFfRWTIPI4dSNhI3Q628XqklZ8%2BF1UktvA5vRdEU3LhDvOSsDCmL19k&amp;amp;X-Amz-Signature=7f876918ec5283db390a3037512e7ad62e434330ec3e406db18b25f25f3da0fe&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从Location下载部署包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PROF = &amp;quot;eu-central-1&amp;quot;

aws lambda create-function --function-name webdriver --runtime nodejs12.x --zip-file fileb:///home/ubuntu/webdriver.zip --handler index.handler  --role arn:aws:iam::762491489154:role/service-role/webdriver-role-3hxi35t5   --timeout 63 --memory-size 1024 --layers arn:aws:lambda:us-east-1:764866452798:layer:chrome-aws-lambda:25  --profile us
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;配置&#34;&gt;配置&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;role-policy.json&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;Version&amp;quot;: &amp;quot;2012-10-17&amp;quot;,
    &amp;quot;Statement&amp;quot;: [
    {
        &amp;quot;Effect&amp;quot;: &amp;quot;Allow&amp;quot;,
        &amp;quot;Principal&amp;quot;: {
            &amp;quot;Service&amp;quot;: [&amp;quot;lambda.amazonaws.com&amp;quot;]
    },
    &amp;quot;Action&amp;quot;: &amp;quot;sts:AssumeRole&amp;quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;aws iam create-role --role-name lambda-s3 --assume-role-policy-document file://role-policy.json
aws iam attach-role-policy --role-name lambda-s3 --policy-arn arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;测试&#34;&gt;测试&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;export AWS_PROFILE=eu-south-1
aws lambda invoke --function-name webdriver --cli-binary-format raw-in-base64-out --payload &#39;{&amp;quot;pageNo&amp;quot;: 5}&#39; out --log-type Tail --query &#39;LogResult&#39; --output text |  base64 -d
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;调度&#34;&gt;调度&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aws events put-rule --name webdriver-scheduled-rule --schedule-expression &#39;rate(30 minutes)&#39; 


aws lambda add-permission --function-name webdriver --statement-id webdriver-scheduled-event --action &#39;lambda:InvokeFunction&#39; --principal events.amazonaws.com --source-arn arn:aws:events:eu-central-1:762491489154:rule/webdriver-scheduled-rule


aws events put-targets --rule webdriver-scheduled-rule --targets file://targets.json
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;调整周期&#34;&gt;调整周期&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;aws events put-rule --name webdriver-scheduled-rule --schedule-expression &amp;quot;rate(10 minutes)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/wubigo/API/blob/master/bash/put-rule.sh&#34; target=&#34;_blank&#34;&gt;https://github.com/wubigo/API/blob/master/bash/put-rule.sh&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;自动&#34;&gt;自动&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;if [ -z &amp;quot;$1&amp;quot; ]
  then
    echo &amp;quot;No region supplied&amp;quot;
    exit 1
fi
export AWS_PROFILE=$1

FN=$(aws lambda create-function --function-name webdriver --runtime nodejs12.x --zip-file fileb:///home/ubuntu/webdriver.zip --handler index.handler  --role arn:aws:iam::762491:role/lambda-s3   --timeout 63 --memory-size 1024 --layers arn:aws:lambda:${AWS_PROFILE}:762491:layer:chrome-aws-lambda:25)
echo $FN

aws events put-rule --name webdriver-scheduled-rule --schedule-expression &#39;rate(30 minutes)&#39;


EVENT=$(aws lambda add-permission --function-name webdriver --statement-id webdriver-scheduled-event --action &#39;lambda:InvokeFunction&#39; --principal events.amazonaws.com --source-arn arn:aws:events:${AWS_PROFILE}:762491:rule/webdriver-scheduled-rule)
echo $EVENT

T=$(python3 targets.py ${AWS_PROFILE})
cat targets.json
aws events put-targets --rule webdriver-scheduled-rule --targets file://targets.json
sleep 5
awslogs streams /aws/lambda/webdriver
awslogs get /aws/lambda/webdriver --filter-pattern=&amp;quot;[r=REPORT,...]&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;禁止调用&#34;&gt;禁止调用&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt; aws lambda put-function-concurrency --function-name webdriver --reserved-concurrent-executions 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;function cannot be invoked while the reserved concurrency is zero.&lt;/p&gt;

&lt;p&gt;Calling the invoke API action failed with this message: Rate Exceeded.&lt;/p&gt;

&lt;h1 id=&#34;并发配额重置&#34;&gt;并发配额重置&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aws lambda delete-function-concurrency  --function-name webdriver
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;清理&#34;&gt;清理&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aws lambda remove-permission --function-name webdriver --statement-id webdriver-scheduled-event
aws events list-targets-by-rule --rule webdriver-scheduled-rule
aws events remove-targets --rule  webdriver-scheduled-rule --ids 1
aws events delete-rule --name &amp;quot;webdriver-scheduled-rule&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Web Test Automation in Lambda Way</title>
      <link>https://wubigo.com/post/web-test-automation-in-lambda-way/</link>
      <pubDate>Sat, 09 Oct 2021 10:15:58 +0800</pubDate>
      
      <guid>https://wubigo.com/post/web-test-automation-in-lambda-way/</guid>
      <description>

&lt;h1 id=&#34;调整默认配置-设置内存和超时时间&#34;&gt;调整默认配置（设置内存和超时时间）&lt;/h1&gt;

&lt;p&gt;函数计算的模式内存是128 MB， 超时是3秒。  默认配置&lt;/p&gt;

&lt;p&gt;pyppeteer无法正常工作。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aws lambda get-function --function-name webdriver
{
    &amp;quot;Configuration&amp;quot;: {
        &amp;quot;FunctionName&amp;quot;: &amp;quot;webdriver&amp;quot;,
        &amp;quot;FunctionArn&amp;quot;: &amp;quot;arn:aws:lambda:ap-northeast-1:762491489154:function:webdriver&amp;quot;,
        &amp;quot;Runtime&amp;quot;: &amp;quot;nodejs12.x&amp;quot;,
        &amp;quot;Role&amp;quot;: &amp;quot;arn:aws:iam::762491489154:role/service-role/webdriver-role-3hxi35t5&amp;quot;,
        &amp;quot;Handler&amp;quot;: &amp;quot;index.handler&amp;quot;,
        &amp;quot;CodeSize&amp;quot;: 598,
        &amp;quot;Description&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;Timeout&amp;quot;: 63,
        &amp;quot;MemorySize&amp;quot;: 1024,
        &amp;quot;LastModified&amp;quot;: &amp;quot;2021-10-08T09:44:02.000+0000&amp;quot;,
        &amp;quot;CodeSha256&amp;quot;: &amp;quot;Ma8ntxB5UxdLSOdotZBnSGDuBUDI+XEGlggfpPlV/AI=&amp;quot;,
        &amp;quot;Version&amp;quot;: &amp;quot;$LATEST&amp;quot;,
        &amp;quot;TracingConfig&amp;quot;: {
            &amp;quot;Mode&amp;quot;: &amp;quot;PassThrough&amp;quot;
        },
        &amp;quot;RevisionId&amp;quot;: &amp;quot;3c08812d-e958-4427-a47e-be628966be36&amp;quot;,
        &amp;quot;Layers&amp;quot;: [
            {
                &amp;quot;Arn&amp;quot;: &amp;quot;arn:aws:lambda:ap-northeast-1:764866452798:layer:chrome-aws-lambda:25&amp;quot;,
                &amp;quot;CodeSize&amp;quot;: 51779390
            }
        ],

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;使用lambda-layer&#34;&gt;使用lambda  layer&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/shelfio/chrome-aws-lambda-layer&#34; target=&#34;_blank&#34;&gt;https://github.com/shelfio/chrome-aws-lambda-layer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;注意要使用相应分区&lt;/p&gt;

&lt;h1 id=&#34;函数定义&#34;&gt;函数定义&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;const chromium = require(&#39;chrome-aws-lambda&#39;);


function getRandomInt(max) {
  let r = Math.floor(Math.random() * max)
  if ( r &amp;lt;= 1 )
    r = 2
  return r;
}


exports.handler = async (event, context, callback) =&amp;gt; {
  console.log(&amp;quot;fn EVENT: \n&amp;quot; + JSON.stringify(event, null, 2))
  let e = JSON.parse(JSON.stringify(event, null, 2));
  let pageNo = e[&amp;quot;pageNo&amp;quot;]
  if ( pageNo == null )
    pageNo = getRandomInt(17)
  console.log(&amp;quot;pageNo=&amp;quot;+pageNo);
  let result = null;
  let browser = null;

  try {
    
    let path = await chromium.executablePath;
    console.log(&amp;quot;browser begin: &amp;quot;+ path+&amp;quot;\n&amp;quot; );
    browser = await chromium.puppeteer.launch({
      args: chromium.args,
      defaultViewport: chromium.defaultViewport,
      executablePath: await chromium.executablePath,
      headless: chromium.headless,
      ignoreHTTPSErrors: true,
    });
    
    let page = await browser.newPage();
    await page.setDefaultTimeout(0);

    await page.goto(&#39;https://wubigo.com/post/page/&#39;+pageNo);
    console.log(&amp;quot;go to wubigo&amp;quot;);
    result = await page.title();
    console.log(&amp;quot;title: &amp;quot; +result +&amp;quot;\n&amp;quot; );
    

    const page2 = await browser.newPage();
    await page2.setDefaultNavigationTimeout(0);
    const articles = await page.$$(&#39;h3.article-title&#39;);
    for (let i = 0; i &amp;lt; articles.length; i++) {
      const link = await articles[i].$eval(&#39;a&#39;, a =&amp;gt; a.getAttribute(&#39;href&#39;))
        .catch((e) =&amp;gt; console.log(&#39;catch err: &#39; + e));
      console.log(&#39;link=&#39;+link);
      e[&amp;quot;link&amp;quot;+i]=link;
      // await articles[i].click().catch((e) =&amp;gt; console.log(&#39;err: &#39; + e));
      await page2.goto(&#39;https://wubigo.com/&#39;+link);
      // await page.goBack();
      
    }
  } catch (error) {
    return callback(error);
  } finally {
    if (browser !== null) {
      await browser.close();
    }
  }
  result = JSON.stringify(e)
  return callback(null, result);
};

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;配置&#34;&gt;配置&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;policy.json&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;Version&amp;quot;: &amp;quot;2012-10-17&amp;quot;,
    &amp;quot;Statement&amp;quot;: [
    {
        &amp;quot;Effect&amp;quot;: &amp;quot;Allow&amp;quot;,
        &amp;quot;Principal&amp;quot;: {
            &amp;quot;Service&amp;quot;: [&amp;quot;lambda.amazonaws.com&amp;quot;, &amp;quot;s3.amazonaws.com&amp;quot;]
    },
    &amp;quot;Action&amp;quot;: &amp;quot;sts:AssumeRole&amp;quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;aws iam create-role --role-name lambda-s3 --assume-role-policy-document file://policy.json
aws iam attach-role-policy --role-name lambda-s3 --policy-arn arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
aws iam attach-role-policy --role-name lambda-s3 --policy-arn arn:aws:iam::aws:policy/AmazonS3FullAccess
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;复制&#34;&gt;复制&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aws lambda create-function --function-name webdriver --runtime nodejs12.x --zip-file fileb:///home/ubuntu/webdriver.zip --handler index.handler  --role arn:aws:iam::762491489154:role/service-role/webdriver-role-3hxi35t5   --timeout 63 --memory-size 1024 --layers arn:aws:lambda:us-east-1:764866452798:layer:chrome-aws-lambda:25  --profile us
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;执行&#34;&gt;执行&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aws lambda invoke --function-name webdriver --cli-binary-format raw-in-base64-out --payload &#39;{&amp;quot;pageNo&amp;quot;: 5}&#39; response.json --profile us




aws lambda invoke --function-name webdriver --cli-binary-format raw-in-base64-out --payload &#39;{&amp;quot;pageNo&amp;quot;: 5}&#39; out --log-type Tail --query &#39;LogResult&#39; --output text --profile us |  base64 -d

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;检查结果&#34;&gt;检查结果&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;cat response.json
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;eventbridge调度&#34;&gt;EventBridge调度&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;aws events put-rule --name webdriver-scheduled-rule --schedule-expression &#39;rate(30 minutes)&#39;


aws lambda add-permission --function-name webdriver --statement-id webdriver-scheduled-event --action &#39;lambda:InvokeFunction&#39; --principal events.amazonaws.com --source-arn arn:aws:events:ap-northeast-1:762491489154:rule/webdriver-scheduled-rule


aws events put-targets --rule webdriver-scheduled-rule --targets file://targets.json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;targets.json&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[
    {
        &amp;quot;Id&amp;quot;: &amp;quot;1&amp;quot;,
        &amp;quot;Arn&amp;quot;: &amp;quot;arn:aws:lambda:ap-northeast-1:762491489154:function:webdriver&amp;quot;
    }
]

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;检查调度结果&#34;&gt;检查调度结果&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;2021-10-21T09:55:56.099Z	397385df-555a-451a-9ba6-b9548438c797	INFO	fn EVENT: 
{
    &amp;quot;version&amp;quot;: &amp;quot;0&amp;quot;,
    &amp;quot;id&amp;quot;: &amp;quot;8945024c-4594-df8a-74f3-9c98b0e75ed5&amp;quot;,
    &amp;quot;detail-type&amp;quot;: &amp;quot;Scheduled Event&amp;quot;,
    &amp;quot;source&amp;quot;: &amp;quot;aws.events&amp;quot;,
    &amp;quot;account&amp;quot;: &amp;quot;762491489154&amp;quot;,
    &amp;quot;time&amp;quot;: &amp;quot;2021-10-21T09:55:11Z&amp;quot;,
    &amp;quot;region&amp;quot;: &amp;quot;ap-northeast-1&amp;quot;,
    &amp;quot;resources&amp;quot;: [
        &amp;quot;arn:aws:events:ap-northeast-1:762491489154:rule/webdriver-scheduled-rule&amp;quot;
    ],
    &amp;quot;detail&amp;quot;: {}
}


# 检查日志

`log-events.json`
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;{
 &amp;ldquo;logStreamName&amp;rdquo;: &amp;ldquo;2021/10/21/[$LATEST]eae72f7f77124ab69d0a1fc398172cec&amp;rdquo;,
 &amp;ldquo;logGroupName&amp;rdquo;: &amp;ldquo;/aws/lambda/webdriver&amp;rdquo;,
 &amp;ldquo;startFromHead&amp;rdquo;: true
}&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;aws logs describe-log-streams &amp;ndash;log-group-name /aws/lambda/webdriver &amp;ndash;log-stream-name-prefix 2021/10/21&lt;/p&gt;

&lt;p&gt;aws logs get-log-events &amp;ndash;cli-input-json file://log-events.json
```&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Maximum Number Files Hdfs</title>
      <link>https://wubigo.com/post/maximum-number-files-hdfs/</link>
      <pubDate>Sat, 09 Oct 2021 09:55:08 +0800</pubDate>
      
      <guid>https://wubigo.com/post/maximum-number-files-hdfs/</guid>
      <description>

&lt;h1 id=&#34;hdfs&#34;&gt;HDFS&lt;/h1&gt;

&lt;p&gt;The maximum number of files in HDFS depends on two things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;total storage space in the cluster&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;the heap size of the NameNode.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;1) You can find out what percentage of storage has been used from HDFS
NameNode UI.&lt;/p&gt;

&lt;p&gt;2) The basic rule of thumb is that 1 GB heap is needed for every million of files.&lt;/p&gt;

&lt;p&gt;Each file object and each block object takes about 150 bytes of the memory. For example, if you have 10 million files and each file has 1 one block each, then you would need about 3GB of memory for the NameNode.&lt;/p&gt;

&lt;p&gt;If I had 10 million files, each using a block, then we would be using: 10 million + 10 million = 20 million * 150 = 3,000,000,000 bytes = 3 GB MEMORY. Keep in mind the NameNode will need memory for other processes. So to support 10 million files then your NameNode will need much more than 3GB of memory.&lt;/p&gt;

&lt;p&gt;So you can increase your max number of files as you go. With increasing
heap for every 1 million files.&lt;/p&gt;

&lt;h1 id=&#34;jindofs介绍和使用&#34;&gt;JindoFS介绍和使用&lt;/h1&gt;

&lt;p&gt;JindoFS提供兼容对象存储的纯客户端模式（SDK）和缓存模式（Cache），
以支持与优化Hadoop和Spark生态大数据计算对OSS的访问；
提供块存储模式（Block），以充分利用OSS的海量存储能力和优化文件系统元数据的操作。&lt;/p&gt;

&lt;p&gt;Q：Block模式跟HDFS相比，是更好的HDFS？&lt;/p&gt;

&lt;p&gt;A：
HDFS的常规限制为4亿，而Block模式元数据规模上支撑10亿以上的文件数，大于HDFS的限制，而且在集群高峰期时性能更为稳定。
HDFS有Java onheap限制，而Block模式没有Java onheap和内存限制，可以支持更大的数据规模。
Block模式轻运维，不用担心坏盘或坏节点，数据1备份放置在OSS上，支持上下线节点。
支持对冷数据做透明压缩和归档，使用多种手段进行成本优化，对接对象存储，支持EB级数据规模。
Block模式支持HDFS的一些重要特性。例如，HDFS AuditLog、Ranger集成和数据加密。&lt;/p&gt;

&lt;p&gt;Q：Block模式具有哪些特别的优势？&lt;/p&gt;

&lt;p&gt;A：
Block模式可以管理文件元数据和组织文件数据，因此可以不局限于OSS对象存储，完全可以满足各种大数据引擎对存储接口的需求。这些接口包括但不限于Rename的原子性和事务性能力、高性能本地写入、透明压缩、truncate、append、flush、sync和snapshot等。这些高阶存储接口对实现完整的POSIX和对接更多的大数据引擎到OSS是不可或缺的，例如，Flink、HBase、Kafka和Kudu。其他两种方式使用OSS也可以对接部分接口，但是能力和优势会有所不足。
Block模式在费用上优于其他两种方式使用OSS。Block模式中，因为全部数据中占比60%的温数据和热数据都在本地有缓存备份，大部分读请求都不会通过OSS，所以可以节省一部分费用。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Web Scrapy</title>
      <link>https://wubigo.com/post/web-scrapy/</link>
      <pubDate>Tue, 28 Sep 2021 08:57:03 +0800</pubDate>
      
      <guid>https://wubigo.com/post/web-scrapy/</guid>
      <description>

&lt;h1 id=&#34;用户代理&#34;&gt;用户代理&lt;/h1&gt;

&lt;p&gt;mobile devices browsing the web often see a pared-down ver‐
sion of sites, lacking banner ads, Flash, and other distractions. If you try changing
your User-Agent to something like the following, you might find that sites get a little
easier to scrape!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;User-Agent:Mozilla/5.0 (iPhone; CPU iPhone OS 7_1_2 like Mac OS X) 
AppleWebKit/537.51.2 (KHTML, like Gecko) Version/7.0 Mobile/11D257 
Safari/9537.53
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;scrapy-architecture&#34;&gt;scrapy architecture&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;https://wubigo.com/img/post/scrapy_architecture.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The data flow in Scrapy is controlled by the execution engine, and goes like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The Engine gets the initial Requests to crawl from the Spider.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The Engine schedules the Requests in the Scheduler and asks for the next Requests to crawl.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The Scheduler returns the next Requests to the Engine.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The Engine sends the Requests to the Downloader, passing through the Downloader Middlewares (see process_request()).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Once the page finishes downloading the Downloader generates a Response (with that page) and sends it to the Engine, passing through the Downloader Middlewares (see process_response()).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The Engine receives the Response from the Downloader and sends it to the Spider for processing, passing through the Spider Middleware (see process_spider_input()).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The Spider processes the Response and returns scraped items and new Requests (to follow) to the Engine, passing through the Spider Middleware (see process_spider_output()).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The Engine sends processed items to Item Pipelines, then send processed Requests to the Scheduler and asks for possible next Requests to crawl.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The process repeats (from step 1) until there are no more requests from the Scheduler.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;check-cookie&#34;&gt;check cookie&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://www.editthiscookie.com/&#34; target=&#34;_blank&#34;&gt;http://www.editthiscookie.com/&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;css-vs-xpath&#34;&gt;CSS vs XPATH&lt;/h1&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Goal&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;CSS&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;XPath&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;All Elements&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;*&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;//*&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;All P Elements&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;p&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;//p&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;All Child Elements&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;p &amp;gt; *&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;//p/*&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Element By ID&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;#foo&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;//*[@id=’foo’]&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Element By Class&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;.foo&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;//*[contains(@class,’foo’)] 1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Element With Attribute&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;*[title]&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;//*[@title]&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;First Child of All P&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;p &amp;gt; *:first-child&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;//p/*[0]&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;All P with an A child&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Not possible&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;//p[a]&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Next Element&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;p + *&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;//p/following-sibling::*[0]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;CSS selectors are better to use when dealing with classes, IDs and tag names. They are shorter and easier to read&lt;/p&gt;

&lt;p&gt;Use CSS Selectors for doing simple queries based on the attributes of the element. CSS Selectors tend to perform better, faster and more reliable than XPath in most browsers&lt;/p&gt;

&lt;h1 id=&#34;ref&#34;&gt;ref&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://cloud.tencent.com/developer/article/1050304&#34; target=&#34;_blank&#34;&gt;https://cloud.tencent.com/developer/article/1050304&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lakehouse Notes</title>
      <link>https://wubigo.com/post/lakehouse-notes/</link>
      <pubDate>Fri, 24 Sep 2021 09:32:22 +0800</pubDate>
      
      <guid>https://wubigo.com/post/lakehouse-notes/</guid>
      <description>

&lt;h2 id=&#34;replication-method&#34;&gt;Replication Method&lt;/h2&gt;

&lt;p&gt;Replication Method - Replication method to use for extracting data from the database. STANDARD replication requires no setup on the DB side but will not be able to represent deletions incrementally. CDC uses the Binlog to detect inserts, updates, and deletes. This needs to be configured on the source database itself.&lt;/p&gt;

&lt;h1 id=&#34;s3-support-in-apache-hadoop&#34;&gt;S3 Support in Apache Hadoop&lt;/h1&gt;

&lt;p&gt;Apache Hadoop ships with a connector to S3 called &amp;ldquo;S3A&amp;rdquo;, with the url prefix &amp;ldquo;s3a:&amp;ldquo;;
its previous connectors &amp;ldquo;s3&amp;rdquo;, and &amp;ldquo;s3n&amp;rdquo; are deprecated and/or deleted from recent Hadoop versions.&lt;/p&gt;

&lt;p&gt;Amazon&amp;rsquo;s EMR Service is based upon Apache Hadoop, but contains modifications and their own closed-source S3 client&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Important: you need a consistency layer to use Amazon S3 as a destination of MapReduce, Spark and Hive work&lt;/strong&gt;
You cannot use any of the S3 filesystem clients as a drop-in replacement for HDFS. Amazon S3 is an &amp;ldquo;object store&amp;rdquo; with&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Eventual consistency: changes made by one application (creation, updates and deletions) will not be visible until some undefined time.&lt;/li&gt;
&lt;li&gt;Non-atomic rename and delete operations. Renaming or deleting large directories takes time proportional to the number of entries -and visible to other processes during this time, and indeed, until the eventual consistency has been resolved. This breaks the commit protocol used by all these applications to safely commit the output of multiple tasks within a job.
Hadoop 3.x ships with S3Guard for consistency, and the S3A Committers for committing work.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;统一元数据&#34;&gt;统一元数据&lt;/h1&gt;

&lt;p&gt;统一的元数据管理，可以实现：&lt;/p&gt;

&lt;h2 id=&#34;持久化的元数据存储&#34;&gt;持久化的元数据存储&lt;/h2&gt;

&lt;p&gt;支持统一元数据之前，元数据都是在集群内部的MySQL数据库，元数据会随着集群的释放而丢失，特别是EMR提供了灵活按量模式，集群可以按需创建用完就释放。如果您需要保留现有的元数据信息，必须登录集群手动将元数据信息导出。支持统一元数据之后，释放集群不会清理元数据信息。所以，在任何时候删除OSS上或者集群HDFS上数据（包括释放集群操作）的时候，需要先确认该数据对应的元数据已经删除（即要删掉数据对应的表和数据库），否则元数据库中可能出现一些脏数据。&lt;/p&gt;

&lt;h2 id=&#34;计算存储分离&#34;&gt;计算存储分离&lt;/h2&gt;

&lt;p&gt;EMR上可以支持将数据存放在阿里云OSS中，在大数据量的情况下将数据存储在OSS上会大大降低使用的成本，EMR集群主要用来作为计算资源，在计算完成之后可以随时释放，数据在OSS上，同时也不用再考虑元数据迁移的问题。&lt;/p&gt;

&lt;h2 id=&#34;数据共享&#34;&gt;数据共享&lt;/h2&gt;

&lt;p&gt;使用统一的元数据库，如果您的所有数据都存放在OSS之上，则不需要做任何元数据的迁移和重建，所有集群都是可以直接访问数据，这样每个EMR集群可以做不同的业务，但是可以很方便地实现数据的共享。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Chrome Read Mode</title>
      <link>https://wubigo.com/post/chrome-read-mode/</link>
      <pubDate>Thu, 26 Aug 2021 06:24:31 +0800</pubDate>
      
      <guid>https://wubigo.com/post/chrome-read-mode/</guid>
      <description>

&lt;h1 id=&#34;打开阅读模式&#34;&gt;打开阅读模式&lt;/h1&gt;

&lt;p&gt;Open a new tab and enter chrome://flags/#enable-reader-mode to jump directly to the Reader Mode Flag.&lt;/p&gt;

&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;

&lt;p&gt;Reader Mode in Chrome is mad-easy to use. When you’re on a page that you’d like to push into the reader view, click on the three-dot menu button in the upper right, and then choose “Distill page.”&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>YARN2 Note</title>
      <link>https://wubigo.com/post/yarn2-note/</link>
      <pubDate>Fri, 20 Aug 2021 21:19:44 +0800</pubDate>
      
      <guid>https://wubigo.com/post/yarn2-note/</guid>
      <description>

&lt;h1 id=&#34;升级yarn&#34;&gt;升级YARN&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;npm install -g yarn@1.22.11



&amp;gt; yarn@1.22.11 preinstall C:\local\node-v14.17.5-win-x64\node_modules\yarn
&amp;gt; :; (node ./preinstall.js &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 || true)

C:\local\node-v14.17.5-win-x64\yarn -&amp;gt; C:\local\node-v14.17.5-win-x64\node_modules\yarn\bin\yarn.js
C:\local\node-v14.17.5-win-x64\yarnpkg -&amp;gt; C:\local\node-v14.17.5-win-x64\node_modules\yarn\bin\yarn.js
+ yarn@1.22.11
updated 1 package in 0.7s
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;yarn-link&#34;&gt;yarn link&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;/home/ubuntu/.config/yarn/link/matrix-js-sdk&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ubuntu@ip-172-31-44-135:~/.config/yarn/link$ ll
total 8
drwxrwxr-x 2 ubuntu ubuntu 4096 Aug 19 09:31 ./
drwxrwxr-x 3 ubuntu ubuntu 4096 Aug 19 07:25 ../
lrwxrwxrwx 1 ubuntu ubuntu   22 Aug 19 09:31 matrix-js-sdk -&amp;gt; ../../../matrix-js-sdk/
lrwxrwxrwx 1 ubuntu ubuntu   25 Aug 19 07:25 matrix-react-sdk -&amp;gt; ../../../matrix-react-sdk/
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;创建应用&#34;&gt;创建应用&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;yarn create react-app matrix

yarn start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;C:\Users\bigo\AppData\Local\Yarn\Data\global\node_modules\.bin\create-react-app&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/home/ubuntu/.config/yarn/global/node_modules/.bin/create-react-app&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Matrix Web Client Dev Setup</title>
      <link>https://wubigo.com/post/matrix-web-client-dev-setup/</link>
      <pubDate>Thu, 19 Aug 2021 14:53:17 +0800</pubDate>
      
      <guid>https://wubigo.com/post/matrix-web-client-dev-setup/</guid>
      <description>

&lt;h1 id=&#34;准备环境&#34;&gt;准备环境&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;node -v
v14.17.5
npm install -g yarn@1.22.11
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;链接sdk&#34;&gt;链接SDK&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/matrix-org/matrix-js-sdk.git
pushd matrix-js-sdk
yarn link
yarn install
popd


git clone https://github.com/matrix-org/matrix-react-sdk.git
pushd matrix-react-sdk
yarn link
yarn link matrix-js-sdk
yarn install
popd



git clone https://github.com/vector-im/element-web.git
cd element-web
yarn link matrix-js-sdk
yarn link matrix-react-sdk
yarn install
yarn reskindex
yarn start

&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;启动&#34;&gt;启动&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;cp config.sample.json config.json

curl http://127.0.0.1:8080/
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;登录&#34;&gt;登录&lt;/h1&gt;

&lt;p&gt;homeserver：&lt;a href=&#34;http://192.168.43.16:8008/&#34; target=&#34;_blank&#34;&gt;http://192.168.43.16:8008/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
