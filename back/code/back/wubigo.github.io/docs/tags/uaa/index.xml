<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>UAA on wubigo</title>
    <link>https://wubigo.com/tags/uaa/</link>
    <description>Recent content in UAA on wubigo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 16 Jun 2020 05:36:49 +0800</lastBuildDate>
    
	<atom:link href="https://wubigo.com/tags/uaa/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Webauthn notes</title>
      <link>https://wubigo.com/post/webauthn-fido/</link>
      <pubDate>Tue, 16 Jun 2020 05:36:49 +0800</pubDate>
      
      <guid>https://wubigo.com/post/webauthn-fido/</guid>
      <description>FIDO Fast Identity Online (FIDO)
WebAuthn was officially recognized as a W3C web standard in March 2019. Today, WebAuthn is part of the FIDO Alliance’s FIDO2 specifications and the FIDO Alliance runs certification programs to ensure compliance</description>
    </item>
    
    <item>
      <title>微服务认证和授权（MAA）指南</title>
      <link>https://wubigo.com/post/microservices-authentication-and-authorization/</link>
      <pubDate>Sun, 28 Apr 2019 17:08:07 +0800</pubDate>
      
      <guid>https://wubigo.com/post/microservices-authentication-and-authorization/</guid>
      <description>微服务认证和授权有很多方案，
这里比较各种主流方案的优缺点，
为你的业务系统选择MAA方案提供指南
   方案 优点 缺点     分布式会话管理 简单，成熟，服务器统一管理 扩展性比较差   客户令牌     单点登录     API网关令牌管理     第三方应用授权     SSL/TLS 双向认证      方案  分布式会话管理  会话信息由服务器存储
实现方式：
 Sticky session Session replication Centralized session storage   客户令牌  令牌由客户持有
JWT: 头，负载和签名
 头
{ &amp;quot;typ&amp;quot;: &amp;quot;JWT&amp;quot;, &amp;quot;alg&amp;quot;: &amp;quot;HS256&amp;quot; }  负载</description>
    </item>
    
    <item>
      <title>UAA Shiro Notes</title>
      <link>https://wubigo.com/post/uaa-shiro-notes/</link>
      <pubDate>Sat, 19 Mar 2016 16:28:19 +0800</pubDate>
      
      <guid>https://wubigo.com/post/uaa-shiro-notes/</guid>
      <description>RequiresUser annotation  Requires the current Subject to be an application user for the annotated class/instance/method to be accessed or invoked. This is less restrictive than the RequiresAuthentication annotation.
 Shiro defines a &amp;ldquo;user&amp;rdquo; as a Subject that is either &amp;ldquo;remembered&amp;rdquo; or authenticated:
 An authenticated user is a Subject that has successfully logged in (proven their identity) during their current session. A remembered user is any Subject that has proven their identity at least once, although not necessarily during their current session, and asked the system to remember them.</description>
    </item>
    
  </channel>
</rss>