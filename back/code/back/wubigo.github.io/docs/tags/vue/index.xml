<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VUE on wubigo</title>
    <link>https://wubigo.com/tags/vue/</link>
    <description>Recent content in VUE on wubigo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Oct 2021 15:53:54 +0800</lastBuildDate>
    
	<atom:link href="https://wubigo.com/tags/vue/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Quasar App Flow</title>
      <link>https://wubigo.com/post/quasar-app-flow/</link>
      <pubDate>Thu, 28 Oct 2021 15:53:54 +0800</pubDate>
      
      <guid>https://wubigo.com/post/quasar-app-flow/</guid>
      <description>CQuasar App Flow In order to better understand how a boot file works and what it does, you need to understand how your website/app boots:
Quasar is initialized (components, directives, plugins, Quasar i18n, Quasar icon sets) Quasar Extras get imported (Roboto font – if used, icons, animations, …) Quasar CSS &amp;amp; your app’s global CSS are imported App.vue is loaded (not yet being used) Store is imported (if using Vuex Store in src/store) Router is imported (in src/router) Boot files are imported Router default export function executed Boot files get their default export function executed (if on Electron mode) Electron is imported and injected into Vue prototype (if on Cordova mode) Listening for “deviceready” event and only then continuing with following steps Instantiating Vue with root component and attaching to DOM</description>
    </item>
    
    <item>
      <title>Vue notes</title>
      <link>https://wubigo.com/post/js-vue/</link>
      <pubDate>Wed, 25 Apr 2018 12:02:41 +0800</pubDate>
      
      <guid>https://wubigo.com/post/js-vue/</guid>
      <description>Single File Components single-file components with a .vue extension is build by tools
such as Webpack or Browserify
A single-file component consists of three parts:
- &amp;lt;template&amp;gt; which contains the component’s markup in plain HTML - &amp;lt;script&amp;gt; which exports the component object constructor that consists of all the JS logic within that component - &amp;lt;style&amp;gt; which contains all the component styles  CORE  Virtual DOM Component-based UI Focus on the view library—separate concerns for routing, state management Official component library for building mobile apps</description>
    </item>
    
    <item>
      <title>Web vue-cli Note</title>
      <link>https://wubigo.com/post/js-vue-cli-note/</link>
      <pubDate>Sat, 10 Feb 2018 22:21:38 +0800</pubDate>
      
      <guid>https://wubigo.com/post/js-vue-cli-note/</guid>
      <description>webpack-simple Webpack is a module bundler for Javascript applications,
it starts at the entrypoint and then build a dependency
graph of the whole application, pulling those dependencies
into one or more bundles that can be included in application.
It supports multiple different file types through loaders,
loaders will take files that have no concept of modules (e.g. css)
and process them in a way that allows them to participate</description>
    </item>
    
  </channel>
</rss>