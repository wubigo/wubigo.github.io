<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SPRING on wubigo</title>
    <link>https://wubigo.com/tags/spring/</link>
    <description>Recent content in SPRING on wubigo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 28 Apr 2018 17:08:07 +0800</lastBuildDate>
    
	<atom:link href="https://wubigo.com/tags/spring/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring Actuator</title>
      <link>https://wubigo.com/post/spring-actuator/</link>
      <pubDate>Sat, 28 Apr 2018 17:08:07 +0800</pubDate>
      
      <guid>https://wubigo.com/post/spring-actuator/</guid>
      <description>setup  &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-actuator&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt;  enable web client all endpoints are exposed to JMX and WEB clents
By default, all endpoints except for shutdown are enabled.
 enable all endpoings
 enable all endpoints accessed by web
management: endpoints: enabled-by-default: true web: exposure: include: &amp;quot;*&amp;quot;   https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html
WebApplicationType  spring: main: web-application-type: reactive   NONE  The application should not run as a web application and should not start an embedded web server.</description>
    </item>
    
    <item>
      <title>Spring Gateway</title>
      <link>https://wubigo.com/post/spring-gateway/</link>
      <pubDate>Fri, 28 Apr 2017 17:08:07 +0800</pubDate>
      
      <guid>https://wubigo.com/post/spring-gateway/</guid>
      <description>&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-cloud-starter-zuul&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt;  gateway with routing @EnableZuulServer is used when you want to build your own routing service and not use any Zuul prebuilt capabilities. An example of this would be if you wanted to use Zuul to integrate with a service discovery engine other than Eureka (for example, Consul). Weâ€™ll only use the @EnableZuulServer annotation in this book.
The Zuul proxy server is designed by default to work on the Spring products.</description>
    </item>
    
  </channel>
</rss>