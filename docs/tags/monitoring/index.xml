<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MONITORING on wubigo</title>
    <link>https://wubigo.com/tags/monitoring/</link>
    <description>Recent content in MONITORING on wubigo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 20 May 2018 17:23:01 +0800</lastBuildDate>
    
	<atom:link href="https://wubigo.com/tags/monitoring/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Monitoring notes</title>
      <link>https://wubigo.com/post/monitoring/</link>
      <pubDate>Sun, 20 May 2018 17:23:01 +0800</pubDate>
      
      <guid>https://wubigo.com/post/monitoring/</guid>
      <description>Container When working with cloud native solutions such as Kubernetes, resources are volatile. Services come and go by design, and that’s fine—as long as the whole system operates in a regular way. Classical monitoring solutions aren’t always able to handle this transience gracefully
Graphite Graphite has no direct data collection support. Carbon listens passively for data, but in order to enable data collection, you should include solutions like fluentd, statd, collectd, or others in your time series data pipeline.</description>
    </item>
    
  </channel>
</rss>