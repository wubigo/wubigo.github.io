<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>KVSTOR on wubigo</title>
    <link>https://wubigo.com/tags/kvstor/</link>
    <description>Recent content in KVSTOR on wubigo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 16 Feb 2018 15:05:34 +0800</lastBuildDate>
    
	<atom:link href="https://wubigo.com/tags/kvstor/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rocksdb Notes</title>
      <link>https://wubigo.com/post/rocksdb-notes/</link>
      <pubDate>Fri, 16 Feb 2018 15:05:34 +0800</pubDate>
      
      <guid>https://wubigo.com/post/rocksdb-notes/</guid>
      <description>表分区 主键=((分区键) + [簇键])
create table kvstor ( k_part_one text, k_part_two int, k_clust_one text, k_clust_two int, k_clust_three uuid, data text, PRIMARY KEY((k_part_one, k_part_two), k_clust_one, k_clust_two, k_clust_three) );  分区键 分区键决定数据在集群内的分布在哪个分区
簇键 簇建决定数据的在分区内的排列顺序
Cassandra DB 主要缺点  Cassandra has big issue with Data Read Latency Hard to tune-up for both latency and throughput Highly depended on Work load and type Max 20 % P99 latency drop Most memory consumed by storage engine To store huge amount of data, JVM is required to manage the memory to clean up garbage collection that is not done by the application but by a language in Cassandra  Cassandra is not recommended if you have following use cases :</description>
    </item>
    
  </channel>
</rss>