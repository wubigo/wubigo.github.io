<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>EDA on wubigo</title>
    <link>https://wubigo.com/tags/eda/</link>
    <description>Recent content in EDA on wubigo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 26 Feb 2022 21:55:15 +0800</lastBuildDate>
    
	<atom:link href="https://wubigo.com/tags/eda/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>OpenAPI vs AsyncAPI</title>
      <link>https://wubigo.com/post/openapi-vs-asyncapi/</link>
      <pubDate>Sat, 26 Feb 2022 21:55:15 +0800</pubDate>
      
      <guid>https://wubigo.com/post/openapi-vs-asyncapi/</guid>
      <description>[1] https://www.asyncapi.com/docs/getting-started/coming-from-openapi</description>
    </item>
    
    <item>
      <title>Dapr组件开发环境搭建</title>
      <link>https://wubigo.com/post/dapr-component-dev-setup/</link>
      <pubDate>Mon, 28 Sep 2020 10:26:04 +0800</pubDate>
      
      <guid>https://wubigo.com/post/dapr-component-dev-setup/</guid>
      <description>开发环境准备 git version 2.34.1.windows.1 cmd&amp;gt;docker version Client: Cloud integration: v1.0.22 Version: 20.10.12 API version: 1.41 Go version: go1.16.12 Git commit: e91ed57 Built: Mon Dec 13 11:44:07 2021 OS/Arch: windows/amd64 Context: default Experimental: true go version go1.17.5 windows/amd64  golangci-lint 在windows上启动git Bash执行如下sh命令安装golangci-lint
# binary will be $(go env GOPATH)/bin/golangci-lint curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.44.2 golangci-lint --version  安装make choco install mingw --version 8.1.0 cmd&amp;gt;make -v GNU Make 4.</description>
    </item>
    
    <item>
      <title>数据库无服务器架构</title>
      <link>https://wubigo.com/post/serverless-database/</link>
      <pubDate>Wed, 14 Feb 2018 02:16:59 +0800</pubDate>
      
      <guid>https://wubigo.com/post/serverless-database/</guid>
      <description> 问题 长链接
通过连接池和数据库保持长链接
 Amazon Aurora Serverless is an on-demand, auto-scaling configuration for Amazon Aurora (MySQL-compatible and PostgreSQL-compatible editions), where the database will automatically start up, shut down, and scale capacity up or down based on your application&amp;rsquo;s needs. It enables you to run your database in the cloud without managing any database instances. It&amp;rsquo;s a simple, cost-effective option for infrequent, intermittent, or unpredictable workloads.
 </description>
    </item>
    
  </channel>
</rss>