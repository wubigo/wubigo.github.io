<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OOP on wubigo</title>
    <link>https://wubigo.com/tags/oop/</link>
    <description>Recent content in OOP on wubigo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Aug 2016 23:37:04 +0800</lastBuildDate>
    
	<atom:link href="https://wubigo.com/tags/oop/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>6 Principles of Software Design</title>
      <link>https://wubigo.com/post/6-principles-of-software-design/</link>
      <pubDate>Thu, 25 Aug 2016 23:37:04 +0800</pubDate>
      
      <guid>https://wubigo.com/post/6-principles-of-software-design/</guid>
      <description>1. Single Responsibility Principle Definition: The single responsibility principle is also known as the single-function principle, that is, there is no more than one reason for the class change. In laymanâ€™s terms, a class is only responsible for one responsibility. Principle: If a class has too many responsibilities, it is equivalent to coupling these responsibilities together. A change in responsibilities may weaken or continue the ability of this class to perform other duties.</description>
    </item>
    
  </channel>
</rss>